import { NestFactory } from '@nestjs/core';
import { MicroserviceOptions, Transport } from '@nestjs/microservices';

import { PostpaidGranularModule } from './postpaid.granular.module';

declare const module: any;

async function bootstrap() {
  const ip1 = process.env.KAFKA_MBSE_IP1;
  const ip2 = process.env.KAFKA_MBSE_IP1;
  const hostname1 = process.env.KAFKA_MBSE_HOSTNAME1;
  const hostname2 = process.env.KAFKA_MBSE_HOSTNAME2;
  const hostname3 = process.env.KAFKA_MBSE_HOSTNAME3;
  const port = process.env.KAFKA_MBSE_PORT;
  const username = process.env.KAFKA_MBSE_USERNAME;
  const password = process.env.KAFKA_MBSE_PASSWORD;
  const cert = process.env.KAFKA_MBSE_PRE_TRUSTSTORE_FILE;
  const app = await NestFactory.createMicroservice<MicroserviceOptions>(
    PostpaidGranularModule,
    {
      transport: Transport.KAFKA,
      options: {
        client: {
          clientId: process.env.clientId,
          brokers: [
            `${hostname1}:${port}`,
            `${hostname2}:${port}`,
            `${hostname3}:${port}`,
          ],
          ssl: {
            rejectUnauthorized: false,
            cert: cert,
          },
          sasl: {
            mechanism: 'plain',
            username: username,
            password: password,
          },
        },
        consumer: {
          groupId: 'SOURCE-APP-ESB',
        },
      },
    },
  );
  await app.listen();

  // if (module.hot) {
  //   module.hot.accept();
  //   module.hot.dispose(() => app.close());
  // }
}

bootstrap();
