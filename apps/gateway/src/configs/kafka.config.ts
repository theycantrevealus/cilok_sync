export default () => {
  const devMode =
    !process.env.NODE_ENV ||
    process.env.NODE_ENV === '' ||
    process.env.NODE_ENV === 'development';

  const connectionTimeoutDefault = 60000;
  const sessionTimeoutDefault = 300000;
  const heartbeatIntervalDefault = 3000;

  if (devMode) {
    return {
      kafka: {
        auction: {
          service: process.env.KAFKA_AUCTION_SERVICE,
          topic: process.env.KAFKA_AUCTION_TOPIC,
          broker: process.env.KAFKA_AUCTION_BROKER,
          cons_group: process.env.KAFKA_AUCTION_CONSUMER_GROUP,
          connectionTimeout: process.env.KAFKA_AUCTION_CONNECTION_TIMEOUT || connectionTimeoutDefault,
          sessionTimeout: process.env.KAFKA_AUCTION_SESSION_TIMEOUT || sessionTimeoutDefault,
          heartbeatInterval: process.env.KAFKA_AUCTION_HEARTBEAT_INTERVAL || heartbeatIntervalDefault,
        },
        batch: {
          service: process.env.KAFKA_BATCH_SERVICE,
          topic: process.env.KAFKA_BATCH_TOPIC,
          broker: process.env.KAFKA_BATCH_BROKER,
          cons_group: process.env.KAFKA_BATCH_CONSUMER_GROUP,
          connectionTimeout: process.env.KAFKA_BATCH_CONNECTION_TIMEOUT || connectionTimeoutDefault,
          sessionTimeout: process.env.KAFKA_BATCH_SESSION_TIMEOUT || sessionTimeoutDefault,
          heartbeatInterval: process.env.KAFKA_BATCH_HEARTBEAT_INTERVAL || heartbeatIntervalDefault,
        },
        inject_point: {
          service: process.env.KAFKA_INJECT_POINT_SERVICE,
          topic: process.env.KAFKA_INJECT_POINT_TOPIC,
          broker: process.env.KAFKA_INJECT_POINT_BROKER,
          cons_group: process.env.KAFKA_INJECT_POINT_CONSUMER_GROUP,
          connectionTimeout: process.env.KAFKA_INJECT_POINT_CONNECTION_TIMEOUT || connectionTimeoutDefault,
          sessionTimeout: process.env.KAFKA_INJECT_POINT_SESSION_TIMEOUT || sessionTimeoutDefault,
          heartbeatInterval: process.env.KAFKA_INJECT_POINT_HEARTBEAT_INTERVAL || heartbeatIntervalDefault,
        },
        inject_point_high: {
          service: process.env.KAFKA_INJECT_POINT_HIGH_SERVICE,
          topic: process.env.KAFKA_INJECT_POINT_HIGH_TOPIC,
          broker: process.env.KAFKA_INJECT_POINT_HIGH_BROKER,
          cons_group: process.env.KAFKA_INJECT_POINT_HIGH_CONSUMER_GROUP,
          connectionTimeout: process.env.KAFKA_INJECT_POINT_HIGH_CONNECTION_TIMEOUT || connectionTimeoutDefault,
          sessionTimeout: process.env.KAFKA_INJECT_POINT_HIGH_SESSION_TIMEOUT || sessionTimeoutDefault,
          heartbeatInterval: process.env.KAFKA_INJECT_POINT_HIGH_HEARTBEAT_INTERVAL || heartbeatIntervalDefault,
        },
        outbound: {
          service: process.env.KAFKA_OUTBOUND_SERVICE,
          topic: process.env.KAFKA_OUTBOUND_TOPIC,
          broker: process.env.KAFKA_OUTBOUND_BROKER,
          cons_group: process.env.KAFKA_OUTBOUND_CONSUMER_GROUP,
          connectionTimeout: process.env.KAFKA_OUTBOUND_CONNECTION_TIMEOUT || connectionTimeoutDefault,
          sessionTimeout: process.env.KAFKA_OUTBOUND_SESSION_TIMEOUT || sessionTimeoutDefault,
          heartbeatInterval: process.env.KAFKA_OUTBOUND_HEARTBEAT_INTERVAL || heartbeatIntervalDefault,
        },
        inbound: {
          service: process.env.KAFKA_INBOUND_SERVICE,
          topic: process.env.KAFKA_INBOUND_TOPIC,
          broker: process.env.KAFKA_INBOUND_BROKER,
          cons_group: process.env.KAFKA_INBOUND_CONSUMER_GROUP,
        },
        merchandise: {
          service: process.env.KAFKA_MERCHANDISE_SERVICE,
          topic: process.env.KAFKA_MERCHANDISE_TOPIC,
          broker: process.env.KAFKA_MERCHANDISE_BROKER,
          cons_group: process.env.KAFKA_MERCHANDISE_CONSUMER_GROUP,
          connectionTimeout: process.env.KAFKA_MERCHANDISE_CONNECTION_TIMEOUT || connectionTimeoutDefault,
          sessionTimeout: process.env.KAFKA_MERCHANDISE_SESSION_TIMEOUT || sessionTimeoutDefault,
          heartbeatInterval: process.env.KAFKA_MERCHANDISE_HEARTBEAT_INTERVAL || heartbeatIntervalDefault,
        },
        inject_coupon: {
          service: process.env.KAFKA_INJECT_COUPON_SERVICE,
          topic: process.env.KAFKA_INJECT_COUPON_TOPIC,
          broker: process.env.KAFKA_INJECT_COUPON_BROKER,
          cons_group: process.env.KAFKA_INJECT_COUPON_CONSUMER_GROUP,
          connectionTimeout: process.env.KAFKA_INJECT_COUPON_CONNECTION_TIMEOUT || connectionTimeoutDefault,
          sessionTimeout: process.env.KAFKA_INJECT_COUPON_SESSION_TIMEOUT || sessionTimeoutDefault,
          heartbeatInterval: process.env.KAFKA_INJECT_COUPON_HEARTBEAT_INTERVAL || heartbeatIntervalDefault,
        },
        donation: {
          service: process.env.KAFKA_DONATION_SERVICE,
          topic: process.env.KAFKA_DONATION_TOPIC,
          broker: process.env.KAFKA_DONATION_BROKER,
          cons_group: process.env.KAFKA_DONATION_CONSUMER_GROUP,
          connectionTimeout: process.env.KAFKA_DONATION_CONNECTION_TIMEOUT || connectionTimeoutDefault,
          sessionTimeout: process.env.KAFKA_DONATION_SESSION_TIMEOUT || sessionTimeoutDefault,
          heartbeatInterval: process.env.KAFKA_DONATION_HEARTBEAT_INTERVAL || heartbeatIntervalDefault,
        },
        eligibility: {
          service: process.env.KAFKA_ELIGIBILITY_SERVICE,
          topic: process.env.KAFKA_ELIGIBILITY_TOPIC,
          broker: process.env.KAFKA_ELIGIBILITY_BROKER,
          cons_group: process.env.KAFKA_ELIGIBILITY_CONSUMER_GROUP,
          connectionTimeout: process.env.KAFKA_ELIGIBILITY_CONNECTION_TIMEOUT || connectionTimeoutDefault,
          sessionTimeout: process.env.KAFKA_ELIGIBILITY_SESSION_TIMEOUT || sessionTimeoutDefault,
          heartbeatInterval: process.env.KAFKA_ELIGIBILITY_HEARTBEAT_INTERVAL || heartbeatIntervalDefault,
        },
        eligibility_high: {
          service: process.env.KAFKA_ELIGIBILITY_HIGH_SERVICE,
          topic: process.env.KAFKA_ELIGIBILITY_HIGH_TOPIC,
          broker: process.env.KAFKA_ELIGIBILITY_HIGH_BROKER,
          cons_group: process.env.KAFKA_ELIGIBILITY_HIGH_CONSUMER_GROUP,
          connectionTimeout: process.env.KAFKA_ELIGIBILITY_HIGH_CONNECTION_TIMEOUT || connectionTimeoutDefault,
          sessionTimeout: process.env.KAFKA_ELIGIBILITY_HIGH_SESSION_TIMEOUT || sessionTimeoutDefault,
          heartbeatInterval: process.env.KAFKA_ELIGIBILITY_HIGH_HEARTBEAT_INTERVAL || heartbeatIntervalDefault,
        },
        eligibility_low: {
          service: process.env.KAFKA_ELIGIBILITY_LOW_SERVICE,
          topic: process.env.KAFKA_ELIGIBILITY_LOW_TOPIC,
          broker: process.env.KAFKA_ELIGIBILITY_LOW_BROKER,
          cons_group: process.env.KAFKA_ELIGIBILITY_LOW_CONSUMER_GROUP,
          connectionTimeout: process.env.KAFKA_ELIGIBILITY_LOW_CONNECTION_TIMEOUT || connectionTimeoutDefault,
          sessionTimeout: process.env.KAFKA_ELIGIBILITY_LOW_SESSION_TIMEOUT || sessionTimeoutDefault,
          heartbeatInterval: process.env.KAFKA_ELIGIBILITY_LOW_HEARTBEAT_INTERVAL || heartbeatIntervalDefault,
        },
        notification: {
          service: process.env.KAFKA_NOTIFICATION_SERVICE,
          topic: process.env.KAFKA_NOTIFICATION_TOPIC,
          broker: process.env.KAFKA_NOTIFICATION_BROKER,
          cons_group: process.env.KAFKA_NOTIFICATION_CONSUMER_GROUP,
          connectionTimeout: process.env.KAFKA_NOTIFICATION_CONNECTION_TIMEOUT || connectionTimeoutDefault,
          sessionTimeout: process.env.KAFKA_NOTIFICATION_SESSION_TIMEOUT || sessionTimeoutDefault,
          heartbeatInterval: process.env.KAFKA_NOTIFICATION_HEARTBEAT_INTERVAL || heartbeatIntervalDefault,
        },
        redeem: {
          service: process.env.KAFKA_REDEEM_SERVICE,
          topic: process.env.KAFKA_REDEEM_TOPIC,
          broker: process.env.KAFKA_REDEEM_BROKER,
          cons_group: process.env.KAFKA_REDEEM_CONSUMER_GROUP,
          connectionTimeout: process.env.KAFKA_REDEEM_CONNECTION_TIMEOUT || connectionTimeoutDefault,
          sessionTimeout: process.env.KAFKA_REDEEM_SESSION_TIMEOUT || sessionTimeoutDefault,
          heartbeatInterval: process.env.KAFKA_REDEEM_HEARTBEAT_INTERVAL || heartbeatIntervalDefault,
        },
        redeem_high: {
          service: process.env.KAFKA_REDEEM_HIGH_SERVICE,
          topic: process.env.KAFKA_REDEEM_HIGH_TOPIC,
          broker: process.env.KAFKA_REDEEM_HIGH_BROKER,
          cons_group: process.env.KAFKA_REDEEM_HIGH_CONSUMER_GROUP,
          connectionTimeout: process.env.KAFKA_REDEEM_HIGH_CONNECTION_TIMEOUT || connectionTimeoutDefault,
          sessionTimeout: process.env.KAFKA_REDEEM_HIGH_SESSION_TIMEOUT || sessionTimeoutDefault,
          heartbeatInterval: process.env.KAFKA_REDEEM_HIGH_HEARTBEAT_INTERVAL || heartbeatIntervalDefault,
        },
        redeem_low: {
          service: process.env.KAFKA_REDEEM_LOW_SERVICE,
          topic: process.env.KAFKA_REDEEM_LOW_TOPIC,
          broker: process.env.KAFKA_REDEEM_LOW_BROKER,
          cons_group: process.env.KAFKA_REDEEM_LOW_CONSUMER_GROUP,
          connectionTimeout: process.env.KAFKA_REDEEM_LOW_CONNECTION_TIMEOUT || connectionTimeoutDefault,
          sessionTimeout: process.env.KAFKA_REDEEM_LOW_SESSION_TIMEOUT || sessionTimeoutDefault,
          heartbeatInterval: process.env.KAFKA_REDEEM_LOW_HEARTBEAT_INTERVAL || heartbeatIntervalDefault,
        },
        deduct: {
          service: process.env.KAFKA_DEDUCT_SERVICE,
          topic: process.env.KAFKA_DEDUCT_TOPIC,
          broker: process.env.KAFKA_DEDUCT_BROKER,
          cons_group: process.env.KAFKA_DEDUCT_CONSUMER_GROUP,
          connectionTimeout: process.env.KAFKA_DEDUCT_CONNECTION_TIMEOUT || connectionTimeoutDefault,
          sessionTimeout: process.env.KAFKA_DEDUCT_SESSION_TIMEOUT || sessionTimeoutDefault,
          heartbeatInterval: process.env.KAFKA_DEDUCT_HEARTBEAT_INTERVAL || heartbeatIntervalDefault,
        },
        deduct_high: {
          service: process.env.KAFKA_DEDUCT_HIGH_SERVICE,
          topic: process.env.KAFKA_DEDUCT_HIGH_TOPIC,
          broker: process.env.KAFKA_DEDUCT_HIGH_BROKER,
          cons_group: process.env.KAFKA_DEDUCT_HIGH_CONSUMER_GROUP,
          connectionTimeout: process.env.KAFKA_DEDUCT_HIGH_CONNECTION_TIMEOUT || connectionTimeoutDefault,
          sessionTimeout: process.env.KAFKA_DEDUCT_HIGH_SESSION_TIMEOUT || sessionTimeoutDefault,
          heartbeatInterval: process.env.KAFKA_DEDUCT_HIGH_HEARTBEAT_INTERVAL || heartbeatIntervalDefault,
        },
        deduct_low: {
          service: process.env.KAFKA_DEDUCT_LOW_SERVICE,
          topic: process.env.KAFKA_DEDUCT_LOW_TOPIC,
          broker: process.env.KAFKA_DEDUCT_LOW_BROKER,
          cons_group: process.env.KAFKA_DEDUCT_LOW_CONSUMER_GROUP,
          connectionTimeout: process.env.KAFKA_DEDUCT_LOW_CONNECTION_TIMEOUT || connectionTimeoutDefault,
          sessionTimeout: process.env.KAFKA_DEDUCT_LOW_SESSION_TIMEOUT || sessionTimeoutDefault,
          heartbeatInterval: process.env.KAFKA_DEDUCT_LOW_HEARTBEAT_INTERVAL || heartbeatIntervalDefault,
        },
        coupon: {
          service: process.env.KAFKA_COUPON_SERVICE,
          topic: process.env.KAFKA_COUPON_TOPIC,
          broker: process.env.KAFKA_COUPON_BROKER,
          cons_group: process.env.KAFKA_COUPON_CONSUMER_GROUP,
          connectionTimeout: process.env.KAFKA_COUPON_CONNECTION_TIMEOUT || connectionTimeoutDefault,
          sessionTimeout: process.env.KAFKA_COUPON_SESSION_TIMEOUT || sessionTimeoutDefault,
          heartbeatInterval: process.env.KAFKA_COUPON_HEARTBEAT_INTERVAL || heartbeatIntervalDefault,
        },
        coupon_high: {
          service: process.env.KAFKA_COUPON_HIGH_SERVICE,
          topic: process.env.KAFKA_COUPON_HIGH_TOPIC,
          broker: process.env.KAFKA_COUPON_HIGH_BROKER,
          cons_group: process.env.KAFKA_COUPON_HIGH_CONSUMER_GROUP,
          connectionTimeout: process.env.KAFKA_COUPON_HIGH_CONNECTION_TIMEOUT || connectionTimeoutDefault,
          sessionTimeout: process.env.KAFKA_COUPON_HIGH_SESSION_TIMEOUT || sessionTimeoutDefault,
          heartbeatInterval: process.env.KAFKA_COUPON_HIGH_HEARTBEAT_INTERVAL || heartbeatIntervalDefault,
        },
        coupon_low: {
          service: process.env.KAFKA_COUPON_LOW_SERVICE,
          topic: process.env.KAFKA_COUPON_LOW_TOPIC,
          broker: process.env.KAFKA_COUPON_LOW_BROKER,
          cons_group: process.env.KAFKA_COUPON_LOW_CONSUMER_GROUP,
          connectionTimeout: process.env.KAFKA_COUPON_LOW_CONNECTION_TIMEOUT || connectionTimeoutDefault,
          sessionTimeout: process.env.KAFKA_COUPON_LOW_SESSION_TIMEOUT || sessionTimeoutDefault,
          heartbeatInterval: process.env.KAFKA_COUPON_LOW_HEARTBEAT_INTERVAL || heartbeatIntervalDefault,
        },
        void: {
          service: process.env.KAFKA_VOID_SERVICE,
          topic: process.env.KAFKA_VOID_TOPIC,
          broker: process.env.KAFKA_VOID_BROKER,
          cons_group: process.env.KAFKA_VOID_CONSUMER_GROUP,
          connectionTimeout: process.env.KAFKA_VOID_CONNECTION_TIMEOUT || connectionTimeoutDefault,
          sessionTimeout: process.env.KAFKA_VOID_SESSION_TIMEOUT || sessionTimeoutDefault,
          heartbeatInterval: process.env.KAFKA_VOID_HEARTBEAT_INTERVAL || heartbeatIntervalDefault,
        },
        voucher: {
          service: process.env.KAFKA_VOUCHER_SERVICE,
          topic: process.env.KAFKA_VOUCHER_TOPIC,
          broker: process.env.KAFKA_VOUCHER_BROKER,
          cons_group: process.env.KAFKA_VOUCHER_CONSUMER_GROUP,
          connectionTimeout: process.env.KAFKA_VOUCHER_CONNECTION_TIMEOUT || connectionTimeoutDefault,
          sessionTimeout: process.env.KAFKA_VOUCHER_SESSION_TIMEOUT || sessionTimeoutDefault,
          heartbeatInterval: process.env.KAFKA_VOUCHER_HEARTBEAT_INTERVAL || heartbeatIntervalDefault,
        },
        transaction_master: {
          service: process.env.KAFKA_TRANSACTION_MASTER_SERVICE,
          topic: process.env.KAFKA_TRANSACTION_MASTER_TOPIC,
          broker: process.env.KAFKA_TRANSACTION_MASTER_BROKER,
          cons_group: process.env.KAFKA_TRANSACTION_MASTER_CONSUMER_GROUP,
          connectionTimeout:
            process.env.KAFKA_TRANSACTION_MASTER_CONNECTION_TIMEOUT || connectionTimeoutDefault,
          sessionTimeout: process.env.KAFKA_TRANSACTION_MASTER_SESSION_TIMEOUT || sessionTimeoutDefault,
          heartbeatInterval:
            process.env.KAFKA_TRANSACTION_MASTER_HEARTBEAT_INTERVAL || heartbeatIntervalDefault,
        },
        refund: {
          service: process.env.KAFKA_REFUND_SERVICE,
          topic: process.env.KAFKA_REFUND_TOPIC,
          broker: process.env.KAFKA_REFUND_BROKER,
          cons_group: process.env.KAFKA_REFUND_CONSUMER_GROUP,
          connectionTimeout: process.env.KAFKA_REFUND_CONNECTION_TIMEOUT || connectionTimeoutDefault,
          sessionTimeout: process.env.KAFKA_REFUND_SESSION_TIMEOUT || sessionTimeoutDefault,
          heartbeatInterval: process.env.KAFKA_REFUND_HEARTBEAT_INTERVAL || heartbeatIntervalDefault,
        },
        sftp: {
          service: process.env.KAFKA_SFTP_SERVICE,
          topic: process.env.KAFKA_SFTP_TOPIC,
          broker: process.env.KAFKA_SFTP_BROKER,
          cons_group: process.env.KAFKA_SFTP_CONSUMER_GROUP,
          connectionTimeout: process.env.KAFKA_SFTP_CONNECTION_TIMEOUT || connectionTimeoutDefault,
          sessionTimeout: process.env.KAFKA_SFTP_SESSION_TIMEOUT || sessionTimeoutDefault,
          heartbeatInterval: process.env.KAFKA_SFTP_HEARTBEAT_INTERVAL || heartbeatIntervalDefault,
        },
        sftp_outgoing: {
          service: process.env.KAFKA_SFTP_OUTGOING_SERVICE,
          topic: process.env.KAFKA_SFTP_OUTGOING_TOPIC,
          broker: process.env.KAFKA_SFTP_OUTGOING_BROKER,
          cons_group: process.env.KAFKA_SFTP_OUTGOING_CONSUMER_GROUP,
        },
        sftp_incoming: {
          service: process.env.KAFKA_SFTP_INCOMING_SERVICE,
          topic: process.env.KAFKA_SFTP_INCOMING_TOPIC,
          broker: process.env.KAFKA_SFTP_INCOMING_BROKER,
          cons_group: process.env.KAFKA_SFTP_INCOMING_CONSUMER_GROUP,
        },
        sftp_incoming_batch_process: {
          service: process.env.KAFKA_SFTP_INCOMING_BATCH_PROCESS_SERVICE,
          topic: process.env.KAFKA_SFTP_INCOMING_BATCH_PROCESS_TOPIC,
          broker: process.env.KAFKA_SFTP_INCOMING_BATCH_PROCESS_BROKER,
          cons_group:process.env.KAFKA_SFTP_INCOMING_BATCH_PROCESS_CONSUMER_GROUP,
          connectionTimeout: process.env.KAFKA_SFTP_INCOMING_BATCH_CONNECTION_TIMEOUT || connectionTimeoutDefault,
          sessionTimeout: process.env.KAFKA_SFTP_INCOMING_BATCH_SESSION_TIMEOUT || sessionTimeoutDefault,
          heartbeatInterval: process.env.KAFKA_SFTP_INCOMING_BATCH_HEARTBEAT_INTERVAL || heartbeatIntervalDefault,
        },
        location: {
          service: process.env.KAFKA_LOCATION_SERVICE,
          topic: process.env.KAFKA_LOCATION_TOPIC,
          broker: process.env.KAFKA_LOCATION_BROKER,
          cons_group: process.env.KAFKA_LOCATION_CONSUMER_GROUP,
        },
        data_store: {
          service: process.env.KAFKA_DATA_STORE_SERVICE,
          topic: process.env.KAFKA_DATA_STORE_TOPIC,
          broker: process.env.KAFKA_DATA_STORE_BROKER,
          cons_group: process.env.KAFKA_DATA_STORE_CONSUMER_GROUP,
          connectionTimeout: process.env.KAFKA_DATA_STORE_CONNECTION_TIMEOUT || connectionTimeoutDefault,
          sessionTimeout: process.env.KAFKA_DATA_STORE_SESSION_TIMEOUT || sessionTimeoutDefault,
          heartbeatInterval: process.env.KAFKA_DATA_STORE_HEARTBEAT_INTERVAL || heartbeatIntervalDefault,
        },
        cron: {
          service: process.env.KAFKA_CRON_SERVICE,
          topic: process.env.KAFKA_CRON_TOPIC,
          broker: process.env.KAFKA_CRON_BROKER,
          cons_group: process.env.KAFKA_CRON_CONSUMER_GROUP,
          connectionTimeout: process.env.KAFKA_CRON_CONNECTION_TIMEOUT || connectionTimeoutDefault,
          sessionTimeout: process.env.KAFKA_CRON_SESSION_TIMEOUT || sessionTimeoutDefault,
          heartbeatInterval: process.env.KAFKA_CRON_HEARTBEAT_INTERVAL || heartbeatIntervalDefault,
        },
        reporting: {
          service: process.env.KAFKA_REPORTING_SERVICE,
          topic: process.env.KAFKA_REPORTING_TOPIC,
          broker: process.env.KAFKA_REPORTING_BROKER,
          cons_group: process.env.KAFKA_REPORTING_CONSUMER_GROUP,
        },
        reporting_statistic: {
          service: process.env.KAFKA_REPORTING_STATISTIC_SERVICE,
          topic: process.env.KAFKA_REPORTING_STATISTIC_TOPIC,
          broker: process.env.KAFKA_REPORTING_STATISTIC_BROKER,
          cons_group: process.env.KAFKA_REPORTING_STATISTIC_CONSUMER_GROUP,
          connectionTimeout: process.env.KAFKA_REPORTING_STATISTIC_CONNECTION_TIMEOUT || connectionTimeoutDefault,
          sessionTimeout: process.env.KAFKA_REPORTING_STATISTIC_SESSION_TIMEOUT || sessionTimeoutDefault,
          heartbeatInterval: process.env.KAFKA_REPORTING_STATISTIC_HEARTBEAT_INTERVAL || heartbeatIntervalDefault,
        },
        reporting_point_event: {
          service: process.env.KAFKA_REPORTING_POINT_EVENT_SERVICE,
          topic: process.env.KAFKA_REPORTING_POINT_EVENT_TOPIC,
          broker: process.env.KAFKA_REPORTING_POINT_EVENT_BROKER,
          cons_group: process.env.KAFKA_REPORTING_POINT_EVENT_CONSUMER_GROUP,
          connectionTimeout: process.env.KAFKA_REPORTING_POINT_EVENT_CONNECTION_TIMEOUT || connectionTimeoutDefault,
          sessionTimeout: process.env.KAFKA_REPORTING_POINT_EVENT_SESSION_TIMEOUT || sessionTimeoutDefault,
          heartbeatInterval: process.env.KAFKA_REPORTING_POINT_EVENT_HEARTBEAT_INTERVAL || heartbeatIntervalDefault,
        },
        reporting_generation: {
          service: process.env.KAFKA_REPORTING_GENERATION_SERVICE,
          topic: process.env.KAFKA_REPORTING_GENERATION_TOPIC,
          broker: process.env.KAFKA_REPORTING_GENERATION_BROKER,
          cons_group: process.env.KAFKA_REPORTING_GENERATION_CONSUMER_GROUP,
          connectionTimeout: process.env.KAFKA_REPORTING_GENERATION_CONNECTION_TIMEOUT || connectionTimeoutDefault,
          sessionTimeout: process.env.KAFKA_REPORTING_GENERATION_SESSION_TIMEOUT || sessionTimeoutDefault,
          heartbeatInterval: process.env.KAFKA_REPORTING_GENERATION_HEARTBEAT_INTERVAL || heartbeatIntervalDefault,
        },
        reporting_generation_recovery: {
          service: process.env.KAFKA_REPORTING_GENERATION_RECOVERY_SERVICE,
          topic: process.env.KAFKA_REPORTING_GENERATION_RECOVERY_TOPIC,
          broker: process.env.KAFKA_REPORTING_GENERATION_RECOVERY_BROKER,
          cons_group:
            process.env.KAFKA_REPORTING_GENERATION_RECOVERY_CONSUMER_GROUP,
        },
        notification_general: {
          service: process.env.KAFKA_NOTIFICATION_GENERAL_SERVICE,
          topic: process.env.KAFKA_NOTIFICATION_GENERAL_TOPIC,
          broker: process.env.KAFKA_NOTIFICATION_GENERAL_BROKER,
          cons_group: process.env.KAFKA_NOTIFICATION_GENERAL_CONSUMER_GROUP,
          connectionTimeout: process.env.KAFKA_NOTIFICATION_GENERAL_CONNECTION_TIMEOUT || connectionTimeoutDefault,
          sessionTimeout: process.env.KAFKA_NOTIFICATION_GENERAL_SESSION_TIMEOUT || sessionTimeoutDefault,
          heartbeatInterval: process.env.KAFKA_NOTIFICATION_GENERAL_HEARTBEAT_INTERVAL || heartbeatIntervalDefault,
        },
        data_sync: {
          service: process.env.KAFKA_DATA_SYNC_SERVICE,
          topic: process.env.KAFKA_DATA_SYNC_TOPIC,
          broker: process.env.KAFKA_DATA_SYNC_BROKER,
          cons_group: process.env.KAFKA_DATA_SYNC_CONSUMER_GROUP,
          connectionTimeout: process.env.KAFKA_DATA_SYNC_CONNECTION_TIMEOUT || connectionTimeoutDefault,
          sessionTimeout: process.env.KAFKA_DATA_SYNC_SESSION_TIMEOUT || sessionTimeoutDefault,
          heartbeatInterval: process.env.KAFKA_DATA_SYNC_HEARTBEAT_INTERVAL || heartbeatIntervalDefault,
        },
        manual_redeem: {
          service: process.env.KAFKA_MANUAL_REDEEM_SERVICE,
          topic: process.env.KAFKA_MANUAL_REDEEM_TOPIC,
          broker: process.env.KAFKA_MANUAL_REDEEM_BROKER,
          cons_group: process.env.KAFKA_MANUAL_REDEEM_CONSUMER_GROUP,
          connectionTimeout: process.env.KAFKA_MANUAL_REDEEM_CONNECTION_TIMEOUT || connectionTimeoutDefault,
          sessionTimeout: process.env.KAFKA_MANUAL_REDEEM_SESSION_TIMEOUT || sessionTimeoutDefault,
          heartbeatInterval: process.env.KAFKA_MANUAL_REDEEM_HEARTBEAT_INTERVAL || heartbeatIntervalDefault,
        },
        manual_redeem_google: {
          service: process.env.KAFKA_MANUAL_REDEEM_GOOGLE_SERVICE,
          topic: process.env.KAFKA_MANUAL_REDEEM_GOOGLE_TOPIC,
          broker: process.env.KAFKA_MANUAL_REDEEM_GOOGLE_BROKER,
          cons_group: process.env.KAFKA_MANUAL_REDEEM_GOOGLE_CONSUMER_GROUP,
        },
        vote: {
          service: process.env.KAFKA_VOTE_SERVICE,
          topic: process.env.KAFKA_VOTE_TOPIC,
          broker: process.env.KAFKA_VOTE_BROKER,
          cons_group: process.env.KAFKA_VOTE_CONSUMER_GROUP,
          connectionTimeout: process.env.KAFKA_VOTE_CONNECTION_TIMEOUT || connectionTimeoutDefault,
          sessionTimeout: process.env.KAFKA_VOTE_SESSION_TIMEOUT || sessionTimeoutDefault,
          heartbeatInterval: process.env.KAFKA_VOTE_HEARTBEAT_INTERVAL || heartbeatIntervalDefault
        },
        granular: {
          service: process.env.KAFKA_GRANULAR_SERVICE,
          topic: process.env.KAFKA_GRANULAR_TOPIC,
          broker: process.env.KAFKA_GRANULAR_BROKER_DEV,
          cons_group: process.env.KAFKA_GRANULAR_CONSUMER_GROUP,
        },
        postpaid_granular: {
          service: process.env.KAFKA_POSPAID_GRANULAR_SERVICE,
          topic: process.env.KAFKA_POSPAID_GRANULAR_TOPIC,
          broker: process.env.KAFKA_POSPAID_GRANULAR_BROKER_DEV,
          cons_group: process.env.KAFKA_POSPAID_GRANULAR_CONSUMER_GROUP,
          connectionTimeout: process.env.KAFKA_POSPAID_GRANULAR_CONNECTION_TIMEOUT || connectionTimeoutDefault,
          sessionTimeout: process.env.KAFKA_POSPAID_GRANULAR_SESSION_TIMEOUT || sessionTimeoutDefault,
          heartbeatInterval: process.env.KAFKA_POSPAID_GRANULAR_HEARTBEAT_INTERVAL || heartbeatIntervalDefault
        },
        prepaid_granular: {
          service: process.env.KAFKA_PREPAID_GRANULAR_SERVICE,
          topic: process.env.KAFKA_PREPAID_GRANULAR_TOPIC,
          broker: process.env.KAFKA_PREPAID_GRANULAR_BROKER_DEV,
          cons_group: process.env.KAFKA_PREPAID_GRANULAR_CONSUMER_GROUP,
          connectionTimeout: process.env.KAFKA_PREPAID_GRANULAR_CONNECTION_TIMEOUT || connectionTimeoutDefault,
          sessionTimeout: process.env.KAFKA_PREPAID_GRANULAR_SESSION_TIMEOUT || sessionTimeoutDefault,
          heartbeatInterval: process.env.KAFKA_PREPAID_GRANULAR_HEARTBEAT_INTERVAL || heartbeatIntervalDefault
        },
        prepaid_granular_renewal: {
          service: process.env.KAFKA_PREPAID_GRANULAR_RENEWAL_SERVICE,
          topic: process.env.KAFKA_PREPAID_GRANULAR_RENEWAL_TOPIC,
          broker: process.env.KAFKA_PREPAID_GRANULAR_RENEWAL_BROKER_DEV,
          cons_group: process.env.KAFKA_PREPAID_GRANULAR_RENEWAL_CONSUMER_GROUP,
          connectionTimeout: process.env.KAFKA_PREPAID_GRANULAR_RENEWAL_CONNECTION_TIMEOUT || connectionTimeoutDefault,
          sessionTimeout: process.env.KAFKA_PREPAID_GRANULAR_RENEWAL_SESSION_TIMEOUT || sessionTimeoutDefault,
          heartbeatInterval: process.env.KAFKA_PREPAID_GRANULAR_RENEWAL_HEARTBEAT_INTERVAL || heartbeatIntervalDefault
        },
        manual_process: {
          service: process.env.KAFKA_MANUAL_PROCESS_SERVICE,
          topic: process.env.KAFKA_MANUAL_PROCESS_TOPIC,
          broker: process.env.KAFKA_MANUAL_PROCESS_BROKER,
          cons_group: process.env.KAFKA_MANUAL_PROCESS_CONSUMER_GROUP,
        },
        callback: {
          service: process.env.KAFKA_CALLBACK_SERVICE,
          topic: process.env.KAFKA_CALLBACK_TOPIC,
          broker: process.env.KAFKA_CALLBACK_BROKER,
          cons_group: process.env.KAFKA_CALLBACK_CONSUMER_GROUP,
          connectionTimeout: process.env.KAFKA_CALLBACK_CONNECTION_TIMEOUT || connectionTimeoutDefault,
          sessionTimeout: process.env.KAFKA_CALLBACK_SESSION_TIMEOUT || sessionTimeoutDefault,
          heartbeatInterval: process.env.KAFKA_CALLBACK_HEARTBEAT_INTERVAL || heartbeatIntervalDefault,
        },
        redeem_fmc: {
          service: process.env.KAFKA_REDEEM_FMC_SERVICE,
          topic: process.env.KAFKA_REDEEM_FMC_TOPIC,
          broker: process.env.KAFKA_REDEEM_FMC_BROKER,
          cons_group: process.env.KAFKA_REDEEM_FMC_CONSUMER_GROUP,
          connectionTimeout: process.env.KAFKA_REDEEM_FMC_CONNECTION_TIMEOUT || connectionTimeoutDefault,
          sessionTimeout: process.env.KAFKA_REDEEM_FMC_SESSION_TIMEOUT || sessionTimeoutDefault,
          heartbeatInterval: process.env.KAFKA_REDEEM_FMC_HEARTBEAT_INTERVAL || heartbeatIntervalDefault,
        },
        campaign: {
          service: process.env.KAFKA_CAMPAIGN_SERVICE,
          topic: process.env.KAFKA_CAMPAIGN_TOPIC,
          broker: process.env.KAFKA_CAMPAIGN_BROKER,
          cons_group: process.env.KAFKA_CAMPAIGN_CONSUMER_GROUP,
          connectionTimeout: process.env.KAFKA_CAMPAIGN_CONNECTION_TIMEOUT || connectionTimeoutDefault,
          sessionTimeout: process.env.KAFKA_CAMPAIGN_SESSION_TIMEOUT || sessionTimeoutDefault,
          heartbeatInterval: process.env.KAFKA_CAMPAIGN_HEARTBEAT_INTERVAL || heartbeatIntervalDefault,
        },
        multi_bonus: {
          service: process.env.KAFKA_MULTI_BONUS_SERVICE,
          topic: process.env.KAFKA_MULTI_BONUS_TOPIC,
          broker: process.env.KAFKA_MULTI_BONUS_BROKER,
          cons_group: process.env.KAFKA_MULTI_BONUS_CONSUMER_GROUP,
          connectionTimeout: process.env.KAFKA_MULTI_BONUS_CONNECTION_TIMEOUT || connectionTimeoutDefault,
          sessionTimeout: process.env.KAFKA_MULTI_BONUS_SESSION_TIMEOUT || sessionTimeoutDefault,
          heartbeatInterval: process.env.KAFKA_MULTI_BONUS_HEARTBEAT_INTERVAL || heartbeatIntervalDefault,
        },
      },
    };
  } else {
    return {
      kafka: {
        auction: {
          service: process.env.KAFKA_AUCTION_SERVICE,
          topic: process.env.KAFKA_AUCTION_TOPIC,
          broker: process.env.KAFKA_AUCTION_BROKER,
          cons_group: process.env.KAFKA_AUCTION_CONSUMER_GROUP,
          ssl: {
            protocol: process.env.KAFKA_AUCTION_SSL_SCP,
            ca: process.env.KAFKA_AUCTION_SSL_CA,
            passphrase: process.env.KAFKA_AUCTION_SSL_PASSPHRASE,
          },
          sasl: {
            mechanism: process.env.KAFKA_AUCTION_SASL_MECHANISM,
            username: process.env.KAFKA_AUCTION_SASL_USERNAME,
            password: process.env.KAFKA_AUCTION_SASL_PASSWORD,
          },
          connectionTimeout: process.env.KAFKA_AUCTION_CONNECTION_TIMEOUT || connectionTimeoutDefault,
          sessionTimeout: process.env.KAFKA_AUCTION_SESSION_TIMEOUT || sessionTimeoutDefault,
          heartbeatInterval: process.env.KAFKA_AUCTION_HEARTBEAT_INTERVAL || heartbeatIntervalDefault,
        },
        batch: {
          service: process.env.KAFKA_BATCH_SERVICE,
          topic: process.env.KAFKA_BATCH_TOPIC,
          broker: process.env.KAFKA_BATCH_BROKER,
          cons_group: process.env.KAFKA_BATCH_CONSUMER_GROUP,
          ssl: {
            protocol: process.env.KAFKA_BATCH_SSL_SCP,
            ca: process.env.KAFKA_BATCH_SSL_CA,
            passphrase: process.env.KAFKA_BATCH_SSL_PASSPHRASE,
          },
          sasl: {
            mechanism: process.env.KAFKA_BATCH_SASL_MECHANISM,
            username: process.env.KAFKA_BATCH_SASL_USERNAME,
            password: process.env.KAFKA_BATCH_SASL_PASSWORD,
          },
          connectionTimeout: process.env.KAFKA_BATCH_CONNECTION_TIMEOUT || connectionTimeoutDefault,
          sessionTimeout: process.env.KAFKA_BATCH_SESSION_TIMEOUT || sessionTimeoutDefault,
          heartbeatInterval: process.env.KAFKA_BATCH_HEARTBEAT_INTERVAL || heartbeatIntervalDefault,
        },
        inject_point: {
          service: process.env.KAFKA_INJECT_POINT_SERVICE,
          topic: process.env.KAFKA_INJECT_POINT_TOPIC,
          broker: process.env.KAFKA_INJECT_POINT_BROKER,
          cons_group: process.env.KAFKA_INJECT_POINT_CONSUMER_GROUP,
          ssl: {
            protocol: process.env.KAFKA_INJECT_POINT_SSL_SCP,
            ca: process.env.KAFKA_INJECT_POINT_SSL_CA,
            passphrase: process.env.KAFKA_INJECT_POINT_SSL_PASSPHRASE,
          },
          sasl: {
            mechanism: process.env.KAFKA_INJECT_POINT_SASL_MECHANISM,
            username: process.env.KAFKA_INJECT_POINT_SASL_USERNAME,
            password: process.env.KAFKA_INJECT_POINT_SASL_PASSWORD,
          },
          connectionTimeout: process.env.KAFKA_INJECT_POINT_CONNECTION_TIMEOUT || connectionTimeoutDefault,
          sessionTimeout: process.env.KAFKA_INJECT_POINT_SESSION_TIMEOUT || sessionTimeoutDefault,
          heartbeatInterval: process.env.KAFKA_INJECT_POINT_HEARTBEAT_INTERVAL || heartbeatIntervalDefault,
        },
        inject_point_high: {
          service: process.env.KAFKA_INJECT_POINT_HIGH_SERVICE,
          topic: process.env.KAFKA_INJECT_POINT_HIGH_TOPIC,
          broker: process.env.KAFKA_INJECT_POINT_HIGH_BROKER,
          cons_group: process.env.KAFKA_INJECT_POINT_HIGH_CONSUMER_GROUP,
          ssl: {
            protocol: process.env.KAFKA_INJECT_POINT_HIGH_SSL_SCP,
            ca: process.env.KAFKA_INJECT_POINT_HIGH_SSL_CA,
            passphrase: process.env.KAFKA_INJECT_POINT_HIGH_SSL_PASSPHRASE,
          },
          sasl: {
            mechanism: process.env.KAFKA_INJECT_POINT_HIGH_SASL_MECHANISM,
            username: process.env.KAFKA_INJECT_POINT_HIGH_SASL_USERNAME,
            password: process.env.KAFKA_INJECT_POINT_HIGH_SASL_PASSWORD,
          },
          connectionTimeout: process.env.KAFKA_INJECT_POINT_HIGH_CONNECTION_TIMEOUT || connectionTimeoutDefault,
          sessionTimeout: process.env.KAFKA_INJECT_POINT_HIGH_SESSION_TIMEOUT || sessionTimeoutDefault,
          heartbeatInterval: process.env.KAFKA_INJECT_POINT_HIGH_HEARTBEAT_INTERVAL || heartbeatIntervalDefault,
        },
        outbound: {
          service: process.env.KAFKA_OUTBOUND_SERVICE,
          topic: process.env.KAFKA_OUTBOUND_TOPIC,
          broker: process.env.KAFKA_OUTBOUND_BROKER,
          cons_group: process.env.KAFKA_OUTBOUND_CONSUMER_GROUP,
          ssl: {
            protocol: process.env.KAFKA_OUTBOUND_SSL_SCP,
            ca: process.env.KAFKA_OUTBOUND_SSL_CA,
            passphrase: process.env.KAFKA_OUTBOUND_SSL_PASSPHRASE,
          },
          sasl: {
            mechanism: process.env.KAFKA_OUTBOUND_SASL_MECHANISM,
            username: process.env.KAFKA_OUTBOUND_SASL_USERNAME,
            password: process.env.KAFKA_OUTBOUND_SASL_PASSWORD,
          },
          connectionTimeout: process.env.KAFKA_OUTBOUND_CONNECTION_TIMEOUT || connectionTimeoutDefault,
          sessionTimeout: process.env.KAFKA_OUTBOUND_SESSION_TIMEOUT || sessionTimeoutDefault,
          heartbeatInterval: process.env.KAFKA_OUTBOUND_HEARTBEAT_INTERVAL || heartbeatIntervalDefault,
        },
        inbound: {
          service: process.env.KAFKA_INBOUND_SERVICE,
          topic: process.env.KAFKA_INBOUND_TOPIC,
          broker: process.env.KAFKA_INBOUND_BROKER,
          cons_group: process.env.KAFKA_INBOUND_CONSUMER_GROUP,
          ssl: {
            protocol: process.env.KAFKA_INBOUND_SSL_SCP,
            ca: process.env.KAFKA_INBOUND_SSL_CA,
            passphrase: process.env.KAFKA_INBOUND_SSL_PASSPHRASE,
          },
          sasl: {
            mechanism: process.env.KAFKA_INBOUND_SASL_MECHANISM,
            username: process.env.KAFKA_INBOUND_SASL_USERNAME,
            password: process.env.KAFKA_INBOUND_SASL_PASSWORD,
          },
        },
        merchandise: {
          service: process.env.KAFKA_MERCHANDISE_SERVICE,
          topic: process.env.KAFKA_MERCHANDISE_TOPIC,
          broker: process.env.KAFKA_MERCHANDISE_BROKER,
          cons_group: process.env.KAFKA_MERCHANDISE_CONSUMER_GROUP,
          ssl: {
            protocol: process.env.KAFKA_MERCHANDISE_SSL_SCP,
            ca: process.env.KAFKA_MERCHANDISE_SSL_CA,
            passphrase: process.env.KAFKA_MERCHANDISE_SSL_PASSPHRASE,
          },
          sasl: {
            mechanism: process.env.KAFKA_MERCHANDISE_SASL_MECHANISM,
            username: process.env.KAFKA_MERCHANDISE_SASL_USERNAME,
            password: process.env.KAFKA_MERCHANDISE_SASL_PASSWORD,
          },
          connectionTimeout: process.env.KAFKA_MERCHANDISE_CONNECTION_TIMEOUT || connectionTimeoutDefault,
          sessionTimeout: process.env.KAFKA_MERCHANDISE_SESSION_TIMEOUT || sessionTimeoutDefault,
          heartbeatInterval: process.env.KAFKA_MERCHANDISE_HEARTBEAT_INTERVAL || heartbeatIntervalDefault,
        },
        inject_coupon: {
          service: process.env.KAFKA_INJECT_COUPON_SERVICE,
          topic: process.env.KAFKA_INJECT_COUPON_TOPIC,
          broker: process.env.KAFKA_INJECT_COUPON_BROKER,
          cons_group: process.env.KAFKA_INJECT_COUPON_CONSUMER_GROUP,
          ssl: {
            protocol: process.env.KAFKA_INJECT_COUPON_SSL_SCP,
            ca: process.env.KAFKA_INJECT_COUPON_SSL_CA,
            passphrase: process.env.KAFKA_INJECT_COUPON_SSL_PASSPHRASE,
          },
          sasl: {
            mechanism: process.env.KAFKA_INJECT_COUPON_SASL_MECHANISM,
            username: process.env.KAFKA_INJECT_COUPON_SASL_USERNAME,
            password: process.env.KAFKA_INJECT_COUPON_SASL_PASSWORD,
          },
          connectionTimeout: process.env.KAFKA_INJECT_COUPON_CONNECTION_TIMEOUT || connectionTimeoutDefault,
          sessionTimeout: process.env.KAFKA_INJECT_COUPON_SESSION_TIMEOUT || sessionTimeoutDefault,
          heartbeatInterval: process.env.KAFKA_INJECT_COUPON_HEARTBEAT_INTERVAL || heartbeatIntervalDefault,
        },
        donation: {
          service: process.env.KAFKA_DONATION_SERVICE,
          topic: process.env.KAFKA_DONATION_TOPIC,
          broker: process.env.KAFKA_DONATION_BROKER,
          cons_group: process.env.KAFKA_DONATION_CONSUMER_GROUP,
          ssl: {
            protocol: process.env.KAFKA_DONATION_SSL_SCP,
            ca: process.env.KAFKA_DONATION_SSL_CA,
            passphrase: process.env.KAFKA_DONATION_SSL_PASSPHRASE,
          },
          sasl: {
            mechanism: process.env.KAFKA_DONATION_SASL_MECHANISM,
            username: process.env.KAFKA_DONATION_SASL_USERNAME,
            password: process.env.KAFKA_DONATION_SASL_PASSWORD,
          },
          connectionTimeout: process.env.KAFKA_DONATION_CONNECTION_TIMEOUT || connectionTimeoutDefault,
          sessionTimeout: process.env.KAFKA_DONATION_SESSION_TIMEOUT || sessionTimeoutDefault,
          heartbeatInterval: process.env.KAFKA_DONATION_HEARTBEAT_INTERVAL || heartbeatIntervalDefault,
        },
        eligibility: {
          service: process.env.KAFKA_ELIGIBILITY_SERVICE,
          topic: process.env.KAFKA_ELIGIBILITY_TOPIC,
          broker: process.env.KAFKA_ELIGIBILITY_BROKER,
          cons_group: process.env.KAFKA_ELIGIBILITY_CONSUMER_GROUP,
          ssl: {
            protocol: process.env.KAFKA_ELIGIBILITY_SSL_SCP,
            ca: process.env.KAFKA_ELIGIBILITY_SSL_CA,
            passphrase: process.env.KAFKA_ELIGIBILITY_SSL_PASSPHRASE,
          },
          sasl: {
            mechanism: process.env.KAFKA_ELIGIBILITY_SASL_MECHANISM,
            username: process.env.KAFKA_ELIGIBILITY_SASL_USERNAME,
            password: process.env.KAFKA_ELIGIBILITY_SASL_PASSWORD,
          },
          connectionTimeout: process.env.KAFKA_ELIGIBILITY_CONNECTION_TIMEOUT || connectionTimeoutDefault,
          sessionTimeout: process.env.KAFKA_ELIGIBILITY_SESSION_TIMEOUT || sessionTimeoutDefault,
          heartbeatInterval: process.env.KAFKA_ELIGIBILITY_HEARTBEAT_INTERVAL || heartbeatIntervalDefault,
        },
        eligibility_high: {
          service: process.env.KAFKA_ELIGIBILITY_HIGH_SERVICE,
          topic: process.env.KAFKA_ELIGIBILITY_HIGH_TOPIC,
          broker: process.env.KAFKA_ELIGIBILITY_HIGH_BROKER,
          cons_group: process.env.KAFKA_ELIGIBILITY_HIGH_CONSUMER_GROUP,
          ssl: {
            protocol: process.env.KAFKA_ELIGIBILITY_HIGH_SSL_SCP,
            ca: process.env.KAFKA_ELIGIBILITY_HIGH_SSL_CA,
            passphrase: process.env.KAFKA_ELIGIBILITY_HIGH_SSL_PASSPHRASE,
          },
          sasl: {
            mechanism: process.env.KAFKA_ELIGIBILITY_HIGH_SASL_MECHANISM,
            username: process.env.KAFKA_ELIGIBILITY_HIGH_SASL_USERNAME,
            password: process.env.KAFKA_ELIGIBILITY_HIGH_SASL_PASSWORD,
          },
          connectionTimeout: process.env.KAFKA_ELIGIBILITY_HIGH_CONNECTION_TIMEOUT || connectionTimeoutDefault,
          sessionTimeout: process.env.KAFKA_ELIGIBILITY_HIGH_SESSION_TIMEOUT || sessionTimeoutDefault,
          heartbeatInterval: process.env.KAFKA_ELIGIBILITY_HIGH_HEARTBEAT_INTERVAL || heartbeatIntervalDefault,
        },
        eligibility_low: {
          service: process.env.KAFKA_ELIGIBILITY_LOW_SERVICE,
          topic: process.env.KAFKA_ELIGIBILITY_LOW_TOPIC,
          broker: process.env.KAFKA_ELIGIBILITY_LOW_BROKER,
          cons_group: process.env.KAFKA_ELIGIBILITY_LOW_CONSUMER_GROUP,
          ssl: {
            protocol: process.env.KAFKA_ELIGIBILITY_LOW_SSL_SCP,
            ca: process.env.KAFKA_ELIGIBILITY_LOW_SSL_CA,
            passphrase: process.env.KAFKA_ELIGIBILITY_LOW_SSL_PASSPHRASE,
          },
          sasl: {
            mechanism: process.env.KAFKA_ELIGIBILITY_LOW_SASL_MECHANISM,
            username: process.env.KAFKA_ELIGIBILITY_LOW_SASL_USERNAME,
            password: process.env.KAFKA_ELIGIBILITY_LOW_SASL_PASSWORD,
          },
          connectionTimeout: process.env.KAFKA_ELIGIBILITY_LOW_CONNECTION_TIMEOUT || connectionTimeoutDefault,
          sessionTimeout: process.env.KAFKA_ELIGIBILITY_LOW_SESSION_TIMEOUT || sessionTimeoutDefault,
          heartbeatInterval: process.env.KAFKA_ELIGIBILITY_LOW_HEARTBEAT_INTERVAL || heartbeatIntervalDefault,
        },
        notification: {
          service: process.env.KAFKA_NOTIFICATION_SERVICE,
          topic: process.env.KAFKA_NOTIFICATION_TOPIC,
          broker: process.env.KAFKA_NOTIFICATION_BROKER,
          cons_group: process.env.KAFKA_NOTIFICATION_CONSUMER_GROUP,
          ssl: {
            protocol: process.env.KAFKA_NOTIFICATION_SSL_SCP,
            ca: process.env.KAFKA_NOTIFICATION_SSL_CA,
            passphrase: process.env.KAFKA_NOTIFICATION_SSL_PASSPHRASE,
          },
          sasl: {
            mechanism: process.env.KAFKA_NOTIFICATION_SASL_MECHANISM,
            username: process.env.KAFKA_NOTIFICATION_SASL_USERNAME,
            password: process.env.KAFKA_NOTIFICATION_SASL_PASSWORD,
          },
          connectionTimeout: process.env.KAFKA_NOTIFICATION_CONNECTION_TIMEOUT || connectionTimeoutDefault,
          sessionTimeout: process.env.KAFKA_NOTIFICATION_SESSION_TIMEOUT || sessionTimeoutDefault,
          heartbeatInterval: process.env.KAFKA_NOTIFICATION_HEARTBEAT_INTERVAL || heartbeatIntervalDefault,
        },
        redeem: {
          service: process.env.KAFKA_REDEEM_SERVICE,
          topic: process.env.KAFKA_REDEEM_TOPIC,
          broker: process.env.KAFKA_REDEEM_BROKER,
          cons_group: process.env.KAFKA_REDEEM_CONSUMER_GROUP,
          ssl: {
            protocol: process.env.KAFKA_REDEEM_SSL_SCP,
            ca: process.env.KAFKA_REDEEM_SSL_CA,
            passphrase: process.env.KAFKA_REDEEM_SSL_PASSPHRASE,
          },
          sasl: {
            mechanism: process.env.KAFKA_REDEEM_SASL_MECHANISM,
            username: process.env.KAFKA_REDEEM_SASL_USERNAME,
            password: process.env.KAFKA_REDEEM_SASL_PASSWORD,
          },
          connectionTimeout: process.env.KAFKA_REDEEM_CONNECTION_TIMEOUT || connectionTimeoutDefault,
          sessionTimeout: process.env.KAFKA_REDEEM_SESSION_TIMEOUT || sessionTimeoutDefault,
          heartbeatInterval: process.env.KAFKA_REDEEM_HEARTBEAT_INTERVAL || heartbeatIntervalDefault,
        },
        redeem_high: {
          service: process.env.KAFKA_REDEEM_HIGH_SERVICE,
          topic: process.env.KAFKA_REDEEM_HIGH_TOPIC,
          broker: process.env.KAFKA_REDEEM_HIGH_BROKER,
          cons_group: process.env.KAFKA_REDEEM_HIGH_CONSUMER_GROUP,
          ssl: {
            protocol: process.env.KAFKA_REDEEM_HIGH_SSL_SCP,
            ca: process.env.KAFKA_REDEEM_HIGH_SSL_CA,
            passphrase: process.env.KAFKA_REDEEM_HIGH_SSL_PASSPHRASE,
          },
          sasl: {
            mechanism: process.env.KAFKA_REDEEM_HIGH_SASL_MECHANISM,
            username: process.env.KAFKA_REDEEM_HIGH_SASL_USERNAME,
            password: process.env.KAFKA_REDEEM_HIGH_SASL_PASSWORD,
          },
          connectionTimeout: process.env.KAFKA_REDEEM_HIGH_CONNECTION_TIMEOUT || connectionTimeoutDefault,
          sessionTimeout: process.env.KAFKA_REDEEM_HIGH_SESSION_TIMEOUT || sessionTimeoutDefault,
          heartbeatInterval: process.env.KAFKA_REDEEM_HIGH_HEARTBEAT_INTERVAL || heartbeatIntervalDefault,
        },
        redeem_low: {
          service: process.env.KAFKA_REDEEM_LOW_SERVICE,
          topic: process.env.KAFKA_REDEEM_LOW_TOPIC,
          broker: process.env.KAFKA_REDEEM_LOW_BROKER,
          cons_group: process.env.KAFKA_REDEEM_LOW_CONSUMER_GROUP,
          ssl: {
            protocol: process.env.KAFKA_REDEEM_LOW_SSL_SCP,
            ca: process.env.KAFKA_REDEEM_LOW_SSL_CA,
            passphrase: process.env.KAFKA_REDEEM_LOW_SSL_PASSPHRASE,
          },
          sasl: {
            mechanism: process.env.KAFKA_REDEEM_LOW_SASL_MECHANISM,
            username: process.env.KAFKA_REDEEM_LOW_SASL_USERNAME,
            password: process.env.KAFKA_REDEEM_LOW_SASL_PASSWORD,
          },
          connectionTimeout: process.env.KAFKA_REDEEM_LOW_CONNECTION_TIMEOUT || connectionTimeoutDefault,
          sessionTimeout: process.env.KAFKA_REDEEM_LOW_SESSION_TIMEOUT || sessionTimeoutDefault,
          heartbeatInterval: process.env.KAFKA_REDEEM_LOW_HEARTBEAT_INTERVAL || heartbeatIntervalDefault,
        },
        deduct: {
          service: process.env.KAFKA_DEDUCT_SERVICE,
          topic: process.env.KAFKA_DEDUCT_TOPIC,
          broker: process.env.KAFKA_DEDUCT_BROKER,
          cons_group: process.env.KAFKA_DEDUCT_CONSUMER_GROUP,
          ssl: {
            protocol: process.env.KAFKA_DEDUCT_SSL_SCP,
            ca: process.env.KAFKA_DEDUCT_SSL_CA,
            passphrase: process.env.KAFKA_DEDUCT_SSL_PASSPHRASE,
          },
          sasl: {
            mechanism: process.env.KAFKA_DEDUCT_SASL_MECHANISM,
            username: process.env.KAFKA_DEDUCT_SASL_USERNAME,
            password: process.env.KAFKA_DEDUCT_SASL_PASSWORD,
          },
          connectionTimeout: process.env.KAFKA_DEDUCT_CONNECTION_TIMEOUT || connectionTimeoutDefault,
          sessionTimeout: process.env.KAFKA_DEDUCT_SESSION_TIMEOUT || sessionTimeoutDefault,
          heartbeatInterval: process.env.KAFKA_DEDUCT_HEARTBEAT_INTERVAL || heartbeatIntervalDefault,
        },
        deduct_high: {
          service: process.env.KAFKA_DEDUCT_HIGH_SERVICE,
          topic: process.env.KAFKA_DEDUCT_HIGH_TOPIC,
          broker: process.env.KAFKA_DEDUCT_HIGH_BROKER,
          cons_group: process.env.KAFKA_DEDUCT_HIGH_CONSUMER_GROUP,
          ssl: {
            protocol: process.env.KAFKA_DEDUCT_HIGH_SSL_SCP,
            ca: process.env.KAFKA_DEDUCT_HIGH_SSL_CA,
            passphrase: process.env.KAFKA_DEDUCT_HIGH_SSL_PASSPHRASE,
          },
          sasl: {
            mechanism: process.env.KAFKA_DEDUCT_HIGH_SASL_MECHANISM,
            username: process.env.KAFKA_DEDUCT_HIGH_SASL_USERNAME,
            password: process.env.KAFKA_DEDUCT_HIGH_SASL_PASSWORD,
          },
          connectionTimeout: process.env.KAFKA_DEDUCT_HIGH_CONNECTION_TIMEOUT || connectionTimeoutDefault,
          sessionTimeout: process.env.KAFKA_DEDUCT_HIGH_SESSION_TIMEOUT || sessionTimeoutDefault,
          heartbeatInterval: process.env.KAFKA_DEDUCT_HIGH_HEARTBEAT_INTERVAL || heartbeatIntervalDefault,
        },
        deduct_low: {
          service: process.env.KAFKA_DEDUCT_LOW_SERVICE,
          topic: process.env.KAFKA_DEDUCT_LOW_TOPIC,
          broker: process.env.KAFKA_DEDUCT_LOW_BROKER,
          cons_group: process.env.KAFKA_DEDUCT_LOW_CONSUMER_GROUP,
          ssl: {
            protocol: process.env.KAFKA_DEDUCT_LOW_SSL_SCP,
            ca: process.env.KAFKA_DEDUCT_LOW_SSL_CA,
            passphrase: process.env.KAFKA_DEDUCT_LOW_SSL_PASSPHRASE,
          },
          sasl: {
            mechanism: process.env.KAFKA_DEDUCT_LOW_SASL_MECHANISM,
            username: process.env.KAFKA_DEDUCT_LOW_SASL_USERNAME,
            password: process.env.KAFKA_DEDUCT_LOW_SASL_PASSWORD,
          },
          connectionTimeout: process.env.KAFKA_DEDUCT_LOW_CONNECTION_TIMEOUT || connectionTimeoutDefault,
          sessionTimeout: process.env.KAFKA_DEDUCT_LOW_SESSION_TIMEOUT || sessionTimeoutDefault,
          heartbeatInterval: process.env.KAFKA_DEDUCT_LOW_HEARTBEAT_INTERVAL || heartbeatIntervalDefault,
        },
        coupon: {
          service: process.env.KAFKA_COUPON_SERVICE,
          topic: process.env.KAFKA_COUPON_TOPIC,
          broker: process.env.KAFKA_COUPON_BROKER,
          cons_group: process.env.KAFKA_COUPON_CONSUMER_GROUP,
          ssl: {
            protocol: process.env.KAFKA_COUPON_SSL_SCP,
            ca: process.env.KAFKA_COUPON_SSL_CA,
            passphrase: process.env.KAFKA_COUPON_SSL_PASSPHRASE,
          },
          sasl: {
            mechanism: process.env.KAFKA_COUPON_SASL_MECHANISM,
            username: process.env.KAFKA_COUPON_SASL_USERNAME,
            password: process.env.KAFKA_COUPON_SASL_PASSWORD,
          },
          connectionTimeout: process.env.KAFKA_COUPON_CONNECTION_TIMEOUT || connectionTimeoutDefault,
          sessionTimeout: process.env.KAFKA_COUPON_SESSION_TIMEOUT || sessionTimeoutDefault,
          heartbeatInterval: process.env.KAFKA_COUPON_HEARTBEAT_INTERVAL || heartbeatIntervalDefault,
        },
        coupon_high: {
          service: process.env.KAFKA_COUPON_HIGH_SERVICE,
          topic: process.env.KAFKA_COUPON_HIGH_TOPIC,
          broker: process.env.KAFKA_COUPON_HIGH_BROKER,
          cons_group: process.env.KAFKA_COUPON_HIGH_CONSUMER_GROUP,
          ssl: {
            protocol: process.env.KAFKA_COUPON_HIGH_SSL_SCP,
            ca: process.env.KAFKA_COUPON_HIGH_SSL_CA,
            passphrase: process.env.KAFKA_COUPON_HIGH_SSL_PASSPHRASE,
          },
          sasl: {
            mechanism: process.env.KAFKA_COUPON_HIGH_SASL_MECHANISM,
            username: process.env.KAFKA_COUPON_HIGH_SASL_USERNAME,
            password: process.env.KAFKA_COUPON_HIGH_SASL_PASSWORD,
          },
          connectionTimeout: process.env.KAFKA_COUPON_HIGH_CONNECTION_TIMEOUT || connectionTimeoutDefault,
          sessionTimeout: process.env.KAFKA_COUPON_HIGH_SESSION_TIMEOUT || sessionTimeoutDefault,
          heartbeatInterval: process.env.KAFKA_COUPON_HIGH_HEARTBEAT_INTERVAL || heartbeatIntervalDefault,
        },
        coupon_low: {
          service: process.env.KAFKA_COUPON_LOW_SERVICE,
          topic: process.env.KAFKA_COUPON_LOW_TOPIC,
          broker: process.env.KAFKA_COUPON_LOW_BROKER,
          cons_group: process.env.KAFKA_COUPON_LOW_CONSUMER_GROUP,
          ssl: {
            protocol: process.env.KAFKA_COUPON_LOW_SSL_SCP,
            ca: process.env.KAFKA_COUPON_LOW_SSL_CA,
            passphrase: process.env.KAFKA_COUPON_LOW_SSL_PASSPHRASE,
          },
          sasl: {
            mechanism: process.env.KAFKA_COUPON_LOW_SASL_MECHANISM,
            username: process.env.KAFKA_COUPON_LOW_SASL_USERNAME,
            password: process.env.KAFKA_COUPON_LOW_SASL_PASSWORD,
          },
          connectionTimeout: process.env.KAFKA_COUPON_LOW_CONNECTION_TIMEOUT || connectionTimeoutDefault,
          sessionTimeout: process.env.KAFKA_COUPON_LOW_SESSION_TIMEOUT || sessionTimeoutDefault,
          heartbeatInterval: process.env.KAFKA_COUPON_LOW_HEARTBEAT_INTERVAL || heartbeatIntervalDefault,
        },
        void: {
          service: process.env.KAFKA_VOID_SERVICE,
          topic: process.env.KAFKA_VOID_TOPIC,
          broker: process.env.KAFKA_VOID_BROKER,
          cons_group: process.env.KAFKA_VOID_CONSUMER_GROUP,
          ssl: {
            protocol: process.env.KAFKA_VOID_SSL_SCP,
            ca: process.env.KAFKA_VOID_SSL_CA,
            passphrase: process.env.KAFKA_VOID_SSL_PASSPHRASE,
          },
          sasl: {
            mechanism: process.env.KAFKA_VOID_SASL_MECHANISM,
            username: process.env.KAFKA_VOID_SASL_USERNAME,
            password: process.env.KAFKA_VOID_SASL_PASSWORD,
          },
          connectionTimeout: process.env.KAFKA_VOID_CONNECTION_TIMEOUT || connectionTimeoutDefault,
          sessionTimeout: process.env.KAFKA_VOID_SESSION_TIMEOUT || sessionTimeoutDefault,
          heartbeatInterval: process.env.KAFKA_VOID_HEARTBEAT_INTERVAL || heartbeatIntervalDefault,
        },
        voucher: {
          service: process.env.KAFKA_VOUCHER_SERVICE,
          topic: process.env.KAFKA_VOUCHER_TOPIC,
          broker: process.env.KAFKA_VOUCHER_BROKER,
          cons_group: process.env.KAFKA_VOUCHER_CONSUMER_GROUP,
          ssl: {
            protocol: process.env.KAFKA_VOUCHER_SSL_SCP,
            ca: process.env.KAFKA_VOUCHER_SSL_CA,
            passphrase: process.env.KAFKA_VOUCHER_SSL_PASSPHRASE,
          },
          sasl: {
            mechanism: process.env.KAFKA_VOUCHER_SASL_MECHANISM,
            username: process.env.KAFKA_VOUCHER_SASL_USERNAME,
            password: process.env.KAFKA_VOUCHER_SASL_PASSWORD,
          },
          connectionTimeout: process.env.KAFKA_VOUCHER_CONNECTION_TIMEOUT || connectionTimeoutDefault,
          sessionTimeout: process.env.KAFKA_VOUCHER_SESSION_TIMEOUT || sessionTimeoutDefault,
          heartbeatInterval: process.env.KAFKA_VOUCHER_HEARTBEAT_INTERVAL || heartbeatIntervalDefault,
        },
        transaction_master: {
          service: process.env.KAFKA_TRANSACTION_MASTER_SERVICE,
          topic: process.env.KAFKA_TRANSACTION_MASTER_TOPIC,
          broker: process.env.KAFKA_TRANSACTION_MASTER_BROKER,
          cons_group: process.env.KAFKA_TRANSACTION_MASTER_CONSUMER_GROUP,
          ssl: {
            protocol: process.env.KAFKA_TRANSACTION_MASTER_SSL_SCP,
            ca: process.env.KAFKA_TRANSACTION_MASTER_SSL_CA,
            passphrase: process.env.KAFKA_TRANSACTION_MASTER_SSL_PASSPHRASE,
          },
          sasl: {
            mechanism: process.env.KAFKA_TRANSACTION_MASTER_SASL_MECHANISM,
            username: process.env.KAFKA_TRANSACTION_MASTER_SASL_USERNAME,
            password: process.env.KAFKA_TRANSACTION_MASTER_SASL_PASSWORD,
          },
          connectionTimeout:
            process.env.KAFKA_TRANSACTION_MASTER_CONNECTION_TIMEOUT || connectionTimeoutDefault,
          sessionTimeout: process.env.KAFKA_TRANSACTION_MASTER_SESSION_TIMEOUT || sessionTimeoutDefault,
          heartbeatInterval:
            process.env.KAFKA_TRANSACTION_MASTER_HEARTBEAT_INTERVAL || heartbeatIntervalDefault,
        },
        refund: {
          service: process.env.KAFKA_REFUND_SERVICE,
          topic: process.env.KAFKA_REFUND_TOPIC,
          broker: process.env.KAFKA_REFUND_BROKER,
          cons_group: process.env.KAFKA_REFUND_CONSUMER_GROUP,
          ssl: {
            protocol: process.env.KAFKA_REFUND_SSL_SCP,
            ca: process.env.KAFKA_REFUND_SSL_CA,
            passphrase: process.env.KAFKA_REFUND_SSL_PASSPHRASE,
          },
          sasl: {
            mechanism: process.env.KAFKA_REFUND_SASL_MECHANISM,
            username: process.env.KAFKA_REFUND_SASL_USERNAME,
            password: process.env.KAFKA_REFUND_SASL_PASSWORD,
          },
          connectionTimeout: process.env.KAFKA_REFUND_CONNECTION_TIMEOUT || connectionTimeoutDefault,
          sessionTimeout: process.env.KAFKA_REFUND_SESSION_TIMEOUT || sessionTimeoutDefault,
          heartbeatInterval: process.env.KAFKA_REFUND_HEARTBEAT_INTERVAL || heartbeatIntervalDefault,
        },
        sftp: {
          service: process.env.KAFKA_SFTP_SERVICE,
          topic: process.env.KAFKA_SFTP_TOPIC,
          broker: process.env.KAFKA_SFTP_BROKER,
          cons_group: process.env.KAFKA_SFTP_CONSUMER_GROUP,
          ssl: {
            protocol: process.env.KAFKA_SFTP_SSL_SCP,
            ca: process.env.KAFKA_SFTP_SSL_CA,
            passphrase: process.env.KAFKA_SFTP_SSL_PASSPHRASE,
          },
          sasl: {
            mechanism: process.env.KAFKA_SFTP_SASL_MECHANISM,
            username: process.env.KAFKA_SFTP_SASL_USERNAME,
            password: process.env.KAFKA_SFTP_SASL_PASSWORD,
          },
          connectionTimeout: process.env.KAFKA_SFTP_CONNECTION_TIMEOUT || connectionTimeoutDefault,
          sessionTimeout: process.env.KAFKA_SFTP_SESSION_TIMEOUT || sessionTimeoutDefault,
          heartbeatInterval: process.env.KAFKA_SFTP_HEARTBEAT_INTERVAL || heartbeatIntervalDefault,
        },
        sftp_outgoing: {
          service: process.env.KAFKA_SFTP_OUTGOING_SERVICE,
          topic: process.env.KAFKA_SFTP_OUTGOING_TOPIC,
          broker: process.env.KAFKA_SFTP_OUTGOING_BROKER,
          cons_group: process.env.KAFKA_SFTP_OUTGOING_CONSUMER_GROUP,
          ssl: {
            protocol: process.env.KAFKA_SFTP_OUTGOING_SSL_SCP,
            ca: process.env.KAFKA_SFTP_OUTGOING_SSL_CA,
            passphrase: process.env.KAFKA_SFTP_OUTGOING_SSL_PASSPHRASE,
          },
          sasl: {
            mechanism: process.env.KAFKA_SFTP_OUTGOING_SASL_MECHANISM,
            username: process.env.KAFKA_SFTP_OUTGOING_SASL_USERNAME,
            password: process.env.KAFKA_SFTP_OUTGOING_SASL_PASSWORD,
          },
        },
        sftp_incoming: {
          service: process.env.KAFKA_SFTP_INCOMING_SERVICE,
          topic: process.env.KAFKA_SFTP_INCOMING_TOPIC,
          broker: process.env.KAFKA_SFTP_INCOMING_BROKER,
          cons_group: process.env.KAFKA_SFTP_INCOMING_CONSUMER_GROUP,
          ssl: {
            protocol: process.env.KAFKA_SFTP_INCOMING_SSL_SCP,
            ca: process.env.KAFKA_SFTP_INCOMING_SSL_CA,
            passphrase: process.env.KAFKA_SFTP_INCOMING_SSL_PASSPHRASE,
          },
          sasl: {
            mechanism: process.env.KAFKA_SFTP_INCOMING_SASL_MECHANISM,
            username: process.env.KAFKA_SFTP_INCOMING_SASL_USERNAME,
            password: process.env.KAFKA_SFTP_INCOMING_SASL_PASSWORD,
          },
        },
        sftp_incoming_batch_process: {
          service: process.env.KAFKA_SFTP_INCOMING_BATCH_PROCESS_SERVICE,
          topic: process.env.KAFKA_SFTP_INCOMING_BATCH_PROCESS_TOPIC,
          broker: process.env.KAFKA_SFTP_INCOMING_BATCH_PROCESS_BROKER,
          cons_group:
            process.env.KAFKA_SFTP_INCOMING_BATCH_PROCESS_CONSUMER_GROUP,
          ssl: {
            protocol: process.env.KAFKA_SFTP_INCOMING_BATCH_PROCESS_SSL_SCP,
            ca: process.env.KAFKA_SFTP_INCOMING_BATCH_PROCESS_SSL_CA,
            passphrase:
              process.env.KAFKA_SFTP_INCOMING_BATCH_PROCESS_SSL_PASSPHRASE,
          },
          sasl: {
            mechanism:
              process.env.KAFKA_SFTP_INCOMING_BATCH_PROCESS_SASL_MECHANISM,
            username:
              process.env.KAFKA_SFTP_INCOMING_BATCH_PROCESS_SASL_USERNAME,
            password:
              process.env.KAFKA_SFTP_INCOMING_BATCH_PROCESS_SASL_PASSWORD,
          },
          connectionTimeout: process.env.KAFKA_SFTP_INCOMING_BATCH_CONNECTION_TIMEOUT || connectionTimeoutDefault,
          sessionTimeout: process.env.KAFKA_SFTP_INCOMING_BATCH_SESSION_TIMEOUT || sessionTimeoutDefault,
          heartbeatInterval: process.env.KAFKA_SFTP_INCOMING_BATCH_HEARTBEAT_INTERVAL || heartbeatIntervalDefault,
        },
        location: {
          service: process.env.KAFKA_LOCATION_SERVICE,
          topic: process.env.KAFKA_LOCATION_TOPIC,
          broker: process.env.KAFKA_LOCATION_BROKER,
          cons_group: process.env.KAFKA_LOCATION_CONSUMER_GROUP,
          ssl: {
            protocol: process.env.KAFKA_LOCATION_SSL_SCP,
            ca: process.env.KAFKA_LOCATION_SSL_CA,
            passphrase: process.env.KAFKA_LOCATION_SSL_PASSPHRASE,
          },
          sasl: {
            mechanism: process.env.KAFKA_LOCATION_SASL_MECHANISM,
            username: process.env.KAFKA_LOCATION_SASL_USERNAME,
            password: process.env.KAFKA_LOCATION_SASL_PASSWORD,
          },
        },
        data_store: {
          service: process.env.KAFKA_DATA_STORE_SERVICE,
          topic: process.env.KAFKA_DATA_STORE_TOPIC,
          broker: process.env.KAFKA_DATA_STORE_BROKER,
          cons_group: process.env.KAFKA_DATA_STORE_CONSUMER_GROUP,
          ssl: {
            protocol: process.env.KAFKA_DATA_STORE_SSL_SCP,
            ca: process.env.KAFKA_DATA_STORE_SSL_CA,
            passphrase: process.env.KAFKA_DATA_STORE_SSL_PASSPHRASE,
          },
          sasl: {
            mechanism: process.env.KAFKA_DATA_STORE_SASL_MECHANISM,
            username: process.env.KAFKA_DATA_STORE_SASL_USERNAME,
            password: process.env.KAFKA_DATA_STORE_SASL_PASSWORD,
          },
          connectionTimeout: process.env.KAFKA_DATA_STORE_CONNECTION_TIMEOUT || connectionTimeoutDefault,
          sessionTimeout: process.env.KAFKA_DATA_STORE_SESSION_TIMEOUT || sessionTimeoutDefault,
          heartbeatInterval: process.env.KAFKA_DATA_STORE_HEARTBEAT_INTERVAL || heartbeatIntervalDefault,
        },
        cron: {
          service: process.env.KAFKA_CRON_SERVICE,
          topic: process.env.KAFKA_CRON_TOPIC,
          broker: process.env.KAFKA_CRON_BROKER,
          cons_group: process.env.KAFKA_CRON_CONSUMER_GROUP,
          ssl: {
            protocol: process.env.KAFKA_CRON_SSL_SCP,
            ca: process.env.KAFKA_CRON_SSL_CA,
            passphrase: process.env.KAFKA_CRON_SSL_PASSPHRASE,
          },
          sasl: {
            mechanism: process.env.KAFKA_CRON_SASL_MECHANISM,
            username: process.env.KAFKA_CRON_SASL_USERNAME,
            password: process.env.KAFKA_CRON_SASL_PASSWORD,
          },
          connectionTimeout: process.env.KAFKA_CRON_CONNECTION_TIMEOUT || connectionTimeoutDefault,
          sessionTimeout: process.env.KAFKA_CRON_SESSION_TIMEOUT || sessionTimeoutDefault,
          heartbeatInterval: process.env.KAFKA_CRON_HEARTBEAT_INTERVAL || heartbeatIntervalDefault,
        },
        reporting: {
          service: process.env.KAFKA_REPORTING_SERVICE,
          topic: process.env.KAFKA_REPORTING_TOPIC,
          broker: process.env.KAFKA_REPORTING_BROKER,
          cons_group: process.env.KAFKA_REPORTING_CONSUMER_GROUP,
          ssl: {
            protocol: process.env.KAFKA_REPORTING_SSL_SCP,
            ca: process.env.KAFKA_REPORTING_SSL_CA,
            passphrase: process.env.KAFKA_REPORTING_SSL_PASSPHRASE,
          },
          sasl: {
            mechanism: process.env.KAFKA_REPORTING_SASL_MECHANISM,
            username: process.env.KAFKA_REPORTING_SASL_USERNAME,
            password: process.env.KAFKA_REPORTING_SASL_PASSWORD,
          },
        },
        reporting_statistic: {
          service: process.env.KAFKA_REPORTING_STATISTIC_SERVICE,
          topic: process.env.KAFKA_REPORTING_STATISTIC_TOPIC,
          broker: process.env.KAFKA_REPORTING_STATISTIC_BROKER,
          cons_group: process.env.KAFKA_REPORTING_STATISTIC_CONSUMER_GROUP,
          ssl: {
            protocol: process.env.KAFKA_REPORTING_STATISTIC_SSL_SCP,
            ca: process.env.KAFKA_REPORTING_STATISTIC_SSL_CA,
            passphrase: process.env.KAFKA_REPORTING_STATISTIC_SSL_PASSPHRASE,
          },
          sasl: {
            mechanism: process.env.KAFKA_REPORTING_STATISTIC_SASL_MECHANISM,
            username: process.env.KAFKA_REPORTING_STATISTIC_SASL_USERNAME,
            password: process.env.KAFKA_REPORTING_STATISTIC_SASL_PASSWORD,
          },
          connectionTimeout: process.env.KAFKA_REPORTING_STATISTIC_CONNECTION_TIMEOUT || connectionTimeoutDefault,
          sessionTimeout: process.env.KAFKA_REPORTING_STATISTIC_SESSION_TIMEOUT || sessionTimeoutDefault,
          heartbeatInterval: process.env.KAFKA_REPORTING_STATISTIC_HEARTBEAT_INTERVAL || heartbeatIntervalDefault,
        },
        reporting_point_event: {
          service: process.env.KAFKA_REPORTING_POINT_EVENT_SERVICE,
          topic: process.env.KAFKA_REPORTING_POINT_EVENT_TOPIC,
          broker: process.env.KAFKA_REPORTING_POINT_EVENT_BROKER,
          cons_group: process.env.KAFKA_REPORTING_POINT_EVENT_CONSUMER_GROUP,
          ssl: {
            protocol: process.env.KAFKA_REPORTING_POINT_EVENT_SSL_SCP,
            ca: process.env.KAFKA_REPORTING_POINT_EVENT_SSL_CA,
            passphrase: process.env.KAFKA_REPORTING_POINT_EVENT_SSL_PASSPHRASE,
          },
          sasl: {
            mechanism: process.env.KAFKA_REPORTING_POINT_EVENT_SASL_MECHANISM,
            username: process.env.KAFKA_REPORTING_POINT_EVENT_SASL_USERNAME,
            password: process.env.KAFKA_REPORTING_POINT_EVENT_SASL_PASSWORD,
          },
          connectionTimeout: process.env.KAFKA_REPORTING_POINT_EVENT_CONNECTION_TIMEOUT || connectionTimeoutDefault,
          sessionTimeout: process.env.KAFKA_REPORTING_POINT_EVENT_SESSION_TIMEOUT || sessionTimeoutDefault,
          heartbeatInterval: process.env.KAFKA_REPORTING_POINT_EVENT_HEARTBEAT_INTERVAL || heartbeatIntervalDefault,
        },
        reporting_generation: {
          service: process.env.KAFKA_REPORTING_GENERATION_SERVICE,
          topic: process.env.KAFKA_REPORTING_GENERATION_TOPIC,
          broker: process.env.KAFKA_REPORTING_GENERATION_BROKER,
          cons_group: process.env.KAFKA_REPORTING_GENERATION_CONSUMER_GROUP,
          ssl: {
            protocol: process.env.KAFKA_REPORTING_GENERATION_SSL_SCP,
            ca: process.env.KAFKA_REPORTING_GENERATION_SSL_CA,
            passphrase: process.env.KAFKA_REPORTING_GENERATION_SSL_PASSPHRASE,
          },
          sasl: {
            mechanism: process.env.KAFKA_REPORTING_GENERATION_SASL_MECHANISM,
            username: process.env.KAFKA_REPORTING_GENERATION_SASL_USERNAME,
            password: process.env.KAFKA_REPORTING_GENERATION_SASL_PASSWORD,
          },
          connectionTimeout: process.env.KAFKA_REPORTING_GENERATION_CONNECTION_TIMEOUT || connectionTimeoutDefault,
          sessionTimeout: process.env.KAFKA_REPORTING_GENERATION_SESSION_TIMEOUT || sessionTimeoutDefault,
          heartbeatInterval: process.env.KAFKA_REPORTING_GENERATION_HEARTBEAT_INTERVAL || heartbeatIntervalDefault,
        },
        reporting_generation_recovery: {
          service: process.env.KAFKA_REPORTING_GENERATION_RECOVERY_SERVICE,
          topic: process.env.KAFKA_REPORTING_GENERATION_RECOVERY_TOPIC,
          broker: process.env.KAFKA_REPORTING_GENERATION_RECOVERY_BROKER,
          cons_group:
            process.env.KAFKA_REPORTING_GENERATION_RECOVERY_CONSUMER_GROUP,
          ssl: {
            protocol: process.env.KAFKA_REPORTING_GENERATION_RECOVERY_SSL_SCP,
            ca: process.env.KAFKA_REPORTING_GENERATION_RECOVERY_SSL_CA,
            passphrase:
              process.env.KAFKA_REPORTING_GENERATION_RECOVERY_SSL_PASSPHRASE,
          },
          sasl: {
            mechanism:
              process.env.KAFKA_REPORTING_GENERATION_RECOVERY_SASL_MECHANISM,
            username:
              process.env.KAFKA_REPORTING_GENERATION_RECOVERY_SASL_USERNAME,
            password:
              process.env.KAFKA_REPORTING_GENERATION_RECOVERY_SASL_PASSWORD,
          },
        },
        notification_general: {
          service: process.env.KAFKA_NOTIFICATION_GENERAL_SERVICE,
          topic: process.env.KAFKA_NOTIFICATION_GENERAL_TOPIC,
          broker: process.env.KAFKA_NOTIFICATION_GENERAL_BROKER,
          cons_group: process.env.KAFKA_NOTIFICATION_GENERAL_CONSUMER_GROUP,
          ssl: {
            protocol: process.env.KAFKA_NOTIFICATION_GENERAL_SSL_SCP,
            ca: process.env.KAFKA_NOTIFICATION_GENERAL_SSL_CA,
            passphrase: process.env.KAFKA_NOTIFICATION_GENERAL_SSL_PASSPHRASE,
          },
          sasl: {
            mechanism: process.env.KAFKA_NOTIFICATION_GENERAL_SASL_MECHANISM,
            username: process.env.KAFKA_NOTIFICATION_GENERAL_SASL_USERNAME,
            password: process.env.KAFKA_NOTIFICATION_GENERAL_SASL_PASSWORD,
          },
          connectionTimeout: process.env.KAFKA_NOTIFICATION_GENERAL_CONNECTION_TIMEOUT || connectionTimeoutDefault,
          sessionTimeout: process.env.KAFKA_NOTIFICATION_GENERAL_SESSION_TIMEOUT || sessionTimeoutDefault,
          heartbeatInterval: process.env.KAFKA_NOTIFICATION_GENERAL_HEARTBEAT_INTERVAL || heartbeatIntervalDefault,
        },
        data_sync: {
          service: process.env.KAFKA_DATA_SYNC_SERVICE,
          topic: process.env.KAFKA_DATA_SYNC_TOPIC,
          broker: process.env.KAFKA_DATA_SYNC_BROKER,
          cons_group: process.env.KAFKA_DATA_SYNC_CONSUMER_GROUP,
          ssl: {
            protocol: process.env.KAFKA_DATA_SYNC_SSL_SCP,
            ca: process.env.KAFKA_DATA_SYNC_SSL_CA,
            passphrase: process.env.KAFKA_DATA_SYNC_SSL_PASSPHRASE,
          },
          sasl: {
            mechanism: process.env.KAFKA_DATA_SYNC_SASL_MECHANISM,
            username: process.env.KAFKA_DATA_SYNC_SASL_USERNAME,
            password: process.env.KAFKA_DATA_SYNC_SASL_PASSWORD,
          },
          connectionTimeout: process.env.KAFKA_DATA_SYNC_CONNECTION_TIMEOUT || connectionTimeoutDefault,
          sessionTimeout: process.env.KAFKA_DATA_SYNC_SESSION_TIMEOUT || sessionTimeoutDefault,
          heartbeatInterval: process.env.KAFKA_DATA_SYNC_HEARTBEAT_INTERVAL || heartbeatIntervalDefault,
        },
        manual_redeem: {
          service: process.env.KAFKA_MANUAL_REDEEM_SERVICE,
          topic: process.env.KAFKA_MANUAL_REDEEM_TOPIC,
          broker: process.env.KAFKA_MANUAL_REDEEM_BROKER,
          cons_group: process.env.KAFKA_MANUAL_REDEEM_CONSUMER_GROUP,
          ssl: {
            protocol: process.env.KAFKA_MANUAL_REDEEM_SSL_SCP,
            ca: process.env.KAFKA_MANUAL_REDEEM_SSL_CA,
            passphrase: process.env.KAFKA_MANUAL_REDEEM_SSL_PASSPHRASE,
          },
          sasl: {
            mechanism: process.env.KAFKA_MANUAL_REDEEM_SASL_MECHANISM,
            username: process.env.KAFKA_MANUAL_REDEEM_SASL_USERNAME,
            password: process.env.KAFKA_MANUAL_REDEEM_SASL_PASSWORD,
          },
          connectionTimeout: process.env.KAFKA_MANUAL_REDEEM_CONNECTION_TIMEOUT || connectionTimeoutDefault,
          sessionTimeout: process.env.KAFKA_MANUAL_REDEEM_SESSION_TIMEOUT || sessionTimeoutDefault,
          heartbeatInterval: process.env.KAFKA_MANUAL_REDEEM_HEARTBEAT_INTERVAL || heartbeatIntervalDefault,
        },
        manual_redeem_google: {
          service: process.env.KAFKA_MANUAL_REDEEM_GOOGLE_SERVICE,
          topic: process.env.KAFKA_MANUAL_REDEEM_GOOGLE_TOPIC,
          broker: process.env.KAFKA_MANUAL_REDEEM_GOOGLE_BROKER,
          cons_group: process.env.KAFKA_MANUAL_REDEEM_GOOGLE_CONSUMER_GROUP,
          ssl: {
            protocol: process.env.KAFKA_MANUAL_REDEEM_GOOGLE_SSL_SCP,
            ca: process.env.KAFKA_MANUAL_REDEEM_GOOGLE_SSL_CA,
            passphrase: process.env.KAFKA_MANUAL_REDEEM_GOOGLE_SSL_PASSPHRASE,
          },
          sasl: {
            mechanism: process.env.KAFKA_MANUAL_REDEEM_GOOGLE_SASL_MECHANISM,
            username: process.env.KAFKA_MANUAL_REDEEM_GOOGLE_SASL_USERNAME,
            password: process.env.KAFKA_MANUAL_REDEEM_GOOGLE_SASL_PASSWORD,
          },
        },
        vote: {
          service: process.env.KAFKA_VOTE_SERVICE,
          topic: process.env.KAFKA_VOTE_TOPIC,
          broker: process.env.KAFKA_VOTE_BROKER,
          cons_group: process.env.KAFKA_VOTE_CONSUMER_GROUP,
          ssl: {
            protocol: process.env.KAFKA_VOTE_SSL_SCP,
            ca: process.env.KAFKA_VOTE_SSL_CA,
            passphrase: process.env.KAFKA_VOTE_SSL_PASSPHRASE,
          },
          sasl: {
            mechanism: process.env.KAFKA_VOTE_SASL_MECHANISM,
            username: process.env.KAFKA_VOTE_SASL_USERNAME,
            password: process.env.KAFKA_VOTE_SASL_PASSWORD,
          },
          connectionTimeout: process.env.KAFKA_VOTE_CONNECTION_TIMEOUT || connectionTimeoutDefault,
          sessionTimeout: process.env.KAFKA_VOTE_SESSION_TIMEOUT || sessionTimeoutDefault,
          heartbeatInterval: process.env.KAFKA_VOTE_HEARTBEAT_INTERVAL || heartbeatIntervalDefault,
        },
        granular: {
          service: process.env.KAFKA_GRANULAR_SERVICE,
          topic: process.env.KAFKA_GRANULAR_TOPIC,
          broker: process.env.KAFKA_GRANULAR_BROKER,
          cons_group: process.env.KAFKA_GRANULAR_CONSUMER_GROUP,
        },
        postpaid_granular: {
          service: process.env.KAFKA_POSTPAID_GRANULAR_SERVICE,
          topic: process.env.KAFKA_POSTPAID_GRANULAR_TOPIC,
          broker: process.env.KAFKA_POSTPAID_GRANULAR_BROKER,
          cons_group: process.env.KAFKA_POSTPAID_GRANULAR_CONSUMER_GROUP,
          schema_registry: {
            host: process.env.KAFKA_POSTPAID_GRANULAR_SCHEMA_REGISTRY_HOST,
            username:
              process.env.KAFKA_POSTPAID_GRANULAR_SCHEMA_REGISTRY_USERNAME,
            password:
              process.env.KAFKA_POSTPAID_GRANULAR_SCHEMA_REGISTRY_PASSWORD,
          },
          ssl: {
            protocol: process.env.KAFKA_POSTPAID_GRANULAR_SSL_SCP,
            ca: process.env.KAFKA_POSTPAID_GRANULAR_SSL_CA,
            passphrase: process.env.KAFKA_POSTPAID_GRANULAR_SSL_PASSPHRASE,
          },
          sasl: {
            mechanism:
              process.env.KAFKA_POSTPAID_GRANULAR_SASL_MECHANISM ?? 'plain',
            username: process.env.KAFKA_POSTPAID_GRANULAR_SASL_USERNAME,
            password: process.env.KAFKA_POSTPAID_GRANULAR_SASL_PASSWORD,
          },
          connectionTimeout: process.env.KAFKA_POSTPAID_GRANULAR_CONNECTION_TIMEOUT || connectionTimeoutDefault,
          sessionTimeout: process.env.KAFKA_POSTPAID_GRANULAR_SESSION_TIMEOUT || sessionTimeoutDefault,
          heartbeatInterval: process.env.KAFKA_POSTPAID_GRANULAR_HEARTBEAT_INTERVAL || heartbeatIntervalDefault,
        },
        prepaid_granular: {
          service: process.env.KAFKA_PREPAID_GRANULAR_SERVICE,
          topic: process.env.KAFKA_PREPAID_GRANULAR_TOPIC,
          broker: process.env.KAFKA_PREPAID_GRANULAR_BROKER,
          cons_group: process.env.KAFKA_PREPAID_GRANULAR_CONSUMER_GROUP,
          schema_registry: {
            host: process.env.KAFKA_PREPAID_GRANULAR_SCHEMA_REGISTRY_HOST,
            username:
              process.env.KAFKA_PREPAID_GRANULAR_SCHEMA_REGISTRY_USERNAME,
            password:
              process.env.KAFKA_PREPAID_GRANULAR_SCHEMA_REGISTRY_PASSWORD,
          },
          ssl: {
            protocol: process.env.KAFKA_PREPAID_GRANULAR_SSL_SCP,
            ca: process.env.KAFKA_PREPAID_GRANULAR_SSL_CA,
            passphrase: process.env.KAFKA_PREPAID_GRANULAR_SSL_PASSPHRASE,
          },
          sasl: {
            mechanism:
              process.env.KAFKA_PREPAID_GRANULAR_SASL_MECHANISM ?? 'plain',
            username: process.env.KAFKA_PREPAID_GRANULAR_SASL_USERNAME,
            password: process.env.KAFKA_PREPAID_GRANULAR_SASL_PASSWORD,
          },
          connectionTimeout: process.env.KAFKA_PREPAID_GRANULAR_CONNECTION_TIMEOUT || connectionTimeoutDefault,
          sessionTimeout: process.env.KAFKA_PREPAID_GRANULAR_SESSION_TIMEOUT || sessionTimeoutDefault,
          heartbeatInterval: process.env.KAFKA_PREPAID_GRANULAR_HEARTBEAT_INTERVAL || heartbeatIntervalDefault,
        },
        prepaid_granular_renewal: {
          service: process.env.KAFKA_PREPAID_GRANULAR_RENEWAL_SERVICE,
          topic: process.env.KAFKA_PREPAID_GRANULAR_RENEWAL_TOPIC,
          broker: process.env.KAFKA_PREPAID_GRANULAR_RENEWAL_BROKER,
          cons_group: process.env.KAFKA_PREPAID_GRANULAR_RENEWAL_CONSUMER_GROUP,
          schema_registry: {
            host: process.env.KAFKA_PREPAID_GRANULAR_RENEWAL_SCHEMA_REGISTRY_HOST,
            username:
              process.env.KAFKA_PREPAID_GRANULAR_RENEWAL_SCHEMA_REGISTRY_USERNAME,
            password:
              process.env.KAFKA_PREPAID_GRANULAR_RENEWAL_SCHEMA_REGISTRY_PASSWORD,
          },
          ssl: {
            protocol: process.env.KAFKA_PREPAID_GRANULAR_RENEWAL_SSL_SCP,
            ca: process.env.KAFKA_PREPAID_GRANULAR_RENEWAL_SSL_CA,
            passphrase: process.env.KAFKA_PREPAID_GRANULAR_RENEWAL_SSL_PASSPHRASE,
          },
          sasl: {
            mechanism:
              process.env.KAFKA_PREPAID_GRANULAR_RENEWAL_SASL_MECHANISM ?? 'plain',
            username: process.env.KAFKA_PREPAID_GRANULAR_RENEWAL_SASL_USERNAME,
            password: process.env.KAFKA_PREPAID_GRANULAR_RENEWAL_SASL_PASSWORD,
          },
          connectionTimeout: process.env.KAFKA_PREPAID_GRANULAR_RENEWAL_CONNECTION_TIMEOUT || connectionTimeoutDefault,
          sessionTimeout: process.env.KAFKA_PREPAID_GRANULAR_RENEWAL_SESSION_TIMEOUT || sessionTimeoutDefault,
          heartbeatInterval: process.env.KAFKA_PREPAID_GRANULAR_RENEWAL_HEARTBEAT_INTERVAL || heartbeatIntervalDefault,
        },
        manual_process: {
          service: process.env.KAFKA_MANUAL_PROCESS_SERVICE,
          topic: process.env.KAFKA_MANUAL_PROCESS_TOPIC,
          broker: process.env.KAFKA_MANUAL_PROCESS_BROKER,
          cons_group: process.env.KAFKA_MANUAL_PROCESS_CONSUMER_GROUP,
          ssl: {
            protocol: process.env.KAFKA_MANUAL_PROCESS_SSL_SCP,
            ca: process.env.KAFKA_MANUAL_PROCESS_SSL_CA,
            passphrase: process.env.KAFKA_MANUAL_PROCESS_SSL_PASSPHRASE,
          },
          sasl: {
            mechanism: process.env.KAFKA_MANUAL_PROCESS_SASL_MECHANISM,
            username: process.env.KAFKA_MANUAL_PROCESS_SASL_USERNAME,
            password: process.env.KAFKA_MANUAL_PROCESS_SASL_PASSWORD,
          },
        },
        callback: {
          service: process.env.KAFKA_CALLBACK_SERVICE,
          topic: process.env.KAFKA_CALLBACK_TOPIC,
          broker: process.env.KAFKA_CALLBACK_BROKER,
          cons_group: process.env.KAFKA_CALLBACK_CONSUMER_GROUP,
          ssl: {
            protocol: process.env.KAFKA_CALLBACK_SSL_SCP,
            ca: process.env.KAFKA_CALLBACK_SSL_CA,
            passphrase: process.env.KAFKA_CALLBACK_SSL_PASSPHRASE,
          },
          sasl: {
            mechanism: process.env.KAFKA_CALLBACK_SASL_MECHANISM,
            username: process.env.KAFKA_CALLBACK_SASL_USERNAME,
            password: process.env.KAFKA_CALLBACK_SASL_PASSWORD,
          },
          connectionTimeout: process.env.KAFKA_CALLBACK_CONNECTION_TIMEOUT || connectionTimeoutDefault,
          sessionTimeout: process.env.KAFKA_CALLBACK_SESSION_TIMEOUT || sessionTimeoutDefault,
          heartbeatInterval: process.env.KAFKA_CALLBACK_HEARTBEAT_INTERVAL || heartbeatIntervalDefault,
        },
        // campaign: {
        //   service: process.env.KAFKA_CAMPAIGN_SERVICE,
        //   topic: process.env.KAFKA_CAMPAIGN_TOPIC,
        //   broker: process.env.KAFKA_CAMPAIGN_BROKER,
        //   cons_group: process.env.KAFKA_CAMPAIGN_CONSUMER_GROUP,
        // },
        campaign: {
          service: process.env.KAFKA_CAMPAIGN_SERVICE,
          topic: process.env.KAFKA_CAMPAIGN_TOPIC,
          broker: process.env.KAFKA_CAMPAIGN_BROKER,
          cons_group: process.env.KAFKA_CAMPAIGN_CONSUMER_GROUP,
          ssl: {
            protocol: process.env.KAFKA_CAMPAIGN_SSL_SCP,
            ca: process.env.KAFKA_CAMPAIGN_SSL_CA,
            passphrase: process.env.KAFKA_CAMPAIGN_SSL_PASSPHRASE,
          },
          sasl: {
            mechanism: process.env.KAFKA_CAMPAIGN_SASL_MECHANISM,
            username: process.env.KAFKA_CAMPAIGN_SASL_USERNAME,
            password: process.env.KAFKA_CAMPAIGN_SASL_PASSWORD,
          },
          connectionTimeout: process.env.KAFKA_CAMPAIGN_CONNECTION_TIMEOUT || connectionTimeoutDefault,
          sessionTimeout: process.env.KAFKA_CAMPAIGN_SESSION_TIMEOUT || sessionTimeoutDefault,
          heartbeatInterval: process.env.KAFKA_CAMPAIGN_HEARTBEAT_INTERVAL || heartbeatIntervalDefault,
        },
        redeem_fmc: {
          service: process.env.KAFKA_REDEEM_FMC_SERVICE,
          topic: process.env.KAFKA_REDEEM_FMC_TOPIC,
          broker: process.env.KAFKA_REDEEM_FMC_BROKER,
          cons_group: process.env.KAFKA_REDEEM_FMC_CONSUMER_GROUP,
          connectionTimeout: process.env.KAFKA_REDEEM_FMC_CONNECTION_TIMEOUT || connectionTimeoutDefault,
          sessionTimeout: process.env.KAFKA_REDEEM_FMC_SESSION_TIMEOUT || sessionTimeoutDefault,
          heartbeatInterval: process.env.KAFKA_REDEEM_FMC_HEARTBEAT_INTERVAL || heartbeatIntervalDefault,
          ssl: {
            protocol: process.env.KAFKA_REDEEM_FMC_SSL_SCP,
            ca: process.env.KAFKA_REDEEM_FMC_SSL_CA,
            passphrase: process.env.KAFKA_REDEEM_FMC_SSL_PASSPHRASE,
          },
          sasl: {
            mechanism: process.env.KAFKA_REDEEM_FMC_SASL_MECHANISM,
            username: process.env.KAFKA_REDEEM_FMC_SASL_USERNAME,
            password: process.env.KAFKA_REDEEM_FMC_SASL_PASSWORD,
          },
        },
        multi_bonus: {
          service: process.env.KAFKA_MULTI_BONUS_SERVICE,
          topic: process.env.KAFKA_MULTI_BONUS_TOPIC,
          broker: process.env.KAFKA_MULTI_BONUS_BROKER,
          cons_group: process.env.KAFKA_MULTI_BONUS_CONSUMER_GROUP,
          ssl: {
            protocol: process.env.KAFKA_MULTI_BONUS_SSL_SCP,
            ca: process.env.KAFKA_MULTI_BONUS_SSL_CA,
            passphrase: process.env.KAFKA_MULTI_BONUS_SSL_PASSPHRASE,
          },
          sasl: {
            mechanism: process.env.KAFKA_MULTI_BONUS_SASL_MECHANISM,
            username: process.env.KAFKA_MULTI_BONUS_SASL_USERNAME,
            password: process.env.KAFKA_MULTI_BONUS_SASL_PASSWORD,
          },
          connectionTimeout: process.env.KAFKA_MULTI_BONUS_CONNECTION_TIMEOUT || connectionTimeoutDefault,
          sessionTimeout: process.env.KAFKA_MULTI_BONUS_SESSION_TIMEOUT || sessionTimeoutDefault,
          heartbeatInterval: process.env.KAFKA_MULTI_BONUS_HEARTBEAT_INTERVAL || heartbeatIntervalDefault,
        },
      },
    };
  }
};
